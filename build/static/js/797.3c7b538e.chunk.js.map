{"version":3,"file":"static/js/797.3c7b538e.chunk.js","mappings":"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","sources":["views/admin/calender/components/calender.js","views/admin/calender/index.js","views/admin/task/eventView.js"],"sourcesContent":["import FullCalendar from '@fullcalendar/react';\r\nimport Card from 'components/card/Card';\r\nimport { useEffect, useState } from 'react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\nimport multiMonthPlugin from '@fullcalendar/multimonth';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport { useBreakpointValue, useDisclosure } from '@chakra-ui/react';\r\nimport AddTask from 'views/admin/task/components/addTask';\r\nimport EventView from 'views/admin/task/eventView';\r\n\r\nconst Calender = (props) => {\r\n    const { data, fetchData } = props;\r\n    const [eventView, setEventView] = useState(false);\r\n    const [info, setInfo] = useState(null);\r\n    const [date, setDate] = useState(null);\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n    const handleDateClick = (arg) => {\r\n        setDate(arg.dateStr);\r\n        onOpen();\r\n    };\r\n\r\n    const handleEventClick = (info) => {\r\n        setInfo(info);\r\n        setEventView(true);\r\n    };\r\n\r\n    const [currentView, setCurrentView] = useState('');\r\n\r\n    useEffect(() => {\r\n        setCurrentView('dayGridMonth');\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <AddTask isOpen={isOpen} fetchData={fetchData} onClose={onClose} date={date} />\r\n                <EventView fetchData={fetchData} isOpen={eventView} onClose={() => setEventView(false)} info={info} />\r\n\r\n                <FullCalendar\r\n                    plugins={[dayGridPlugin, timeGridPlugin, listPlugin, interactionPlugin, multiMonthPlugin]}\r\n                    initialView={currentView}\r\n                    height=\"600px\"\r\n                    dateClick={handleDateClick}\r\n                    events={data}\r\n                    headerToolbar={{\r\n                        left: 'prev,next today',\r\n                        center: 'title',\r\n                        right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek,multiMonthFourMonth',\r\n                    }}\r\n                    eventClick={handleEventClick}\r\n                    buttonText={{\r\n                        today: 'Today',\r\n                        dayGridMonth: 'Month',\r\n                        timeGridWeek: 'Week',\r\n                        timeGridDay: 'Day',\r\n                        listWeek: 'List',\r\n                    }}\r\n                    views={{\r\n                        multiMonthFourMonth: {\r\n                            type: 'multiMonth',\r\n                            buttonText: 'Multi Month',\r\n                            duration: { months: useBreakpointValue({ base: 4, lg: 4, xl: 6 }) },\r\n                        },\r\n                    }}\r\n                    eventClassNames=\"custom-fullcalendar\"\r\n                />\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Calender;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getApi } from \"services/api\";\r\nimport Calendar from './components/calender'; // Ensure correct casing in component names\r\n\r\nconst Index = () => {\r\n    const [data, setData] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const result = await getApi(user.role === 'admin' ? 'api/task/' : `api/task/?createBy=${user._id}`);\r\n            setData(result.data);\r\n        } catch (err) {\r\n            setError('Failed to fetch data. Please try again later.');\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    if (isLoading) {\r\n        return <div>Loading...</div>; // Replace with a spinner or loading component\r\n    }\r\n\r\n    if (error) {\r\n        return <div style={{ color: 'red' }}>{error}</div>; // Display error message\r\n    }\r\n\r\n    return (\r\n        <Calendar fetchData={fetchData} data={data} />\r\n    );\r\n};\r\n\r\nexport default Index;\r\n","import { CloseIcon, DeleteIcon, EditIcon, ViewIcon } from '@chakra-ui/icons'\r\nimport { DrawerFooter, Flex, Grid, GridItem, IconButton, Modal, ModalBody, ModalContent, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react'\r\nimport Spinner from \"components/spinner/Spinner\"\r\nimport moment from 'moment'\r\nimport { useEffect, useState } from 'react'\r\nimport { BiLink } from 'react-icons/bi'\r\nimport { Link } from 'react-router-dom'\r\nimport { getApi } from 'services/api'\r\nimport DeleteTask from './components/deleteTask'\r\nimport EditTask from './components/editTask'\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst EventView = (props) => {\r\n    const { onClose, isOpen, info, fetchData } = props\r\n    const [data, setData] = useState()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n    const fetchViewData = async () => {\r\n        if (info) {\r\n            setIsLoding(true)\r\n            let result = await getApi('api/task/view/', info?.event ? info?.event?._def?.extendedProps?._id : info);\r\n            setData(result?.data);\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchViewData()\r\n    }, [info])\r\n\r\n    const handleViewOpen = () => {\r\n        if (info?.event) {\r\n            navigate(user?.role !== 'admin' ? `/view/${info?.event?._def?.extendedProps?._id}` : `/admin/view/${info?.event?._def?.extendedProps?._id}`)\r\n        }\r\n        else {\r\n            navigate(user?.role !== 'admin' ? `/view/${info}` : `/admin/view/${info}`)\r\n        }\r\n    }\r\n    return (\r\n        <Modal isOpen={isOpen} size={'md'} isCentered>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader justifyContent='space-between' display='flex' >\r\n                    Task\r\n                    <IconButton onClick={() => onClose(false)} icon={<CloseIcon />} />\r\n                </ModalHeader>\r\n                {isLoding ?\r\n                    <Flex justifyContent={'center'} alignItems={'center'} mb={30} width=\"100%\" >\r\n                        <Spinner />\r\n                    </Flex> : <>\r\n\r\n                        <ModalBody>\r\n                            <Grid templateColumns=\"repeat(12, 1fr)\" gap={3} >\r\n\r\n                                <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Title </Text>\r\n                                    <Text>{data?.title ? data?.title : ' - '}</Text>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Related To </Text>\r\n                                    <Text>{data?.category ? data?.category : ' - '}</Text>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task start </Text>\r\n                                    <Text>{data?.start ? moment(data?.start).format('L LT') : ' - '}</Text>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task end  </Text>\r\n                                    <Text>{data?.end ? moment(data?.end).format('L LT') : moment(data?.start).format('L')}</Text>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Link </Text>\r\n                                    {data?.url ?\r\n                                        <a target='_blank' href={data?.url}>\r\n                                            <IconButton borderRadius=\"10px\" size=\"md\" icon={<BiLink />} />\r\n                                        </a> : '-'\r\n                                    }\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task reminder </Text>\r\n                                    <Text>{data?.reminder ? data?.reminder : ' - '}</Text>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> assignment To  </Text>\r\n                                    <Link to={data?.assignmentTo ? user?.role !== 'admin' ? `/contactView/${data?.assignmentTo}` : `/admin/contactView/${data?.assignmentTo}` : user?.role !== 'admin' ? `/leadView/${data?.assignmentToLead}` : `/admin/leadView/${data?.assignmentToLead}`}>\r\n                                        <Text color='green.400' sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.assignmentToName ? data?.assignmentToName : ' - '}</Text>\r\n                                    </Link>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task createBy </Text>\r\n                                    <Text>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 12 }} >\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Description</Text>\r\n                                    <Text>{data?.description ? data?.description : ' - '}</Text>\r\n                                </GridItem>\r\n                                <GridItem colSpan={{ base: 12 }} >\r\n                                    <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task notes </Text>\r\n                                    <Text>{data?.notes ? data?.notes : ' - '}</Text>\r\n                                </GridItem>\r\n                            </Grid>\r\n\r\n                        </ModalBody>\r\n                        <DrawerFooter>\r\n                            <IconButton variant='outline' onClick={() => handleViewOpen()} borderRadius=\"10px\" size=\"md\" icon={<ViewIcon />} />\r\n                            <IconButton variant='outline' onClick={() => setEdit(true)} ml={3} borderRadius=\"10px\" size=\"md\" icon={<EditIcon />} />\r\n                            <IconButton colorScheme='red' onClick={() => setDelete(true)} ml={3} borderRadius=\"10px\" size=\"md\" icon={<DeleteIcon />} />\r\n\r\n                            <EditTask fetchData={fetchData} isOpen={edit} onClose={setEdit} viewClose={onClose} id={info?.event ? info?.event?._def?.extendedProps?._id : info} />\r\n                            <DeleteTask fetchData={props.fetchData} isOpen={deleteModel} onClose={setDelete} viewClose={onClose} url='api/task/delete/' method='one' id={info?.event ? info?.event?._def?.extendedProps?._id : info} />\r\n                        </DrawerFooter>\r\n                    </>}\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default EventView\r\n"],"names":["props","data","fetchData","eventView","setEventView","useState","info","setInfo","date","setDate","isOpen","onOpen","onClose","useDisclosure","currentView","setCurrentView","useEffect","_jsx","children","_jsxs","Card","AddTask","EventView","FullCalendar","plugins","dayGridPlugin","timeGridPlugin","listPlugin","interactionPlugin","multiMonthPlugin","initialView","height","dateClick","arg","dateStr","events","headerToolbar","left","center","right","eventClick","buttonText","today","dayGridMonth","timeGridWeek","timeGridDay","listWeek","views","multiMonthFourMonth","type","duration","months","useBreakpointValue","base","lg","xl","eventClassNames","Index","setData","isLoading","setIsLoading","error","setError","user","JSON","parse","localStorage","getItem","async","result","getApi","role","_id","err","style","color","Calendar","_info$event4","_info$event4$_def","_info$event4$_def$ext","_info$event5","_info$event5$_def","_info$event5$_def$ext","edit","setEdit","deleteModel","setDelete","isLoding","setIsLoding","navigate","useNavigate","_info$event","_info$event$_def","_info$event$_def$exte","event","_def","extendedProps","fetchViewData","Modal","size","isCentered","ModalOverlay","ModalContent","ModalHeader","justifyContent","display","IconButton","onClick","icon","CloseIcon","Flex","alignItems","mb","width","Spinner","_Fragment","ModalBody","Grid","templateColumns","gap","GridItem","colSpan","md","Text","fontSize","fontWeight","title","category","start","moment","format","end","url","target","href","borderRadius","BiLink","reminder","Link","to","assignmentTo","assignmentToLead","sx","textDecoration","assignmentToName","createByName","description","notes","DrawerFooter","variant","handleViewOpen","_info$event2","_info$event2$_def","_info$event2$_def$ext","_info$event3","_info$event3$_def","_info$event3$_def$ext","ViewIcon","ml","EditIcon","colorScheme","DeleteIcon","EditTask","viewClose","id","DeleteTask","method"],"sourceRoot":""}