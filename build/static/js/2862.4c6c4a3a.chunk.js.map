{"version":3,"file":"static/js/2862.4c6c4a3a.chunk.js","mappings":"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","sources":["views/admin/task/components/taskView.js","../node_modules/@chakra-ui/icons/dist/esm/Add.mjs","../node_modules/@chakra-ui/icons/dist/esm/ChevronDown.mjs","../node_modules/@chakra-ui/icons/dist/esm/Edit.mjs","../node_modules/@chakra-ui/react/dist/esm/media-query/use-breakpoint.mjs","../node_modules/@chakra-ui/react/dist/esm/media-query/use-media-query.mjs","../node_modules/@chakra-ui/react/dist/esm/media-query/use-breakpoint-value.mjs","../node_modules/@chakra-ui/react/dist/esm/media-query/media-query.utils.mjs","../node_modules/@chakra-ui/react/dist/esm/menu/menu-divider.mjs"],"sourcesContent":["import { Button, Grid, GridItem, Flex, IconButton, Text, Menu, MenuButton, MenuDivider, MenuItem, MenuList, useDisclosure } from '@chakra-ui/react'\r\nimport { AddIcon, ChevronDownIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport React from 'react'\r\nimport moment from 'moment'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { BiLink } from 'react-icons/bi'\r\nimport { useEffect } from 'react'\r\nimport { useState } from 'react'\r\nimport { getApi } from 'services/api'\r\nimport Card from 'components/card/Card'\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport AddTask from './addTask'\r\nimport DeleteTask from './deleteTask'\r\nimport EditTask from './editTask'\r\n\r\nconst TaskView = (props) => {\r\n    const params = useParams()\r\n    const { id } = params\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n\r\n    const [data, setData] = useState()\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n\r\n    const fetchViewData = async () => {\r\n        if (id) {\r\n            setIsLoding(true)\r\n            let result = await getApi('api/task/view/', id?.event ? id?.event?._def?.extendedProps?._id : id);\r\n            setData(result?.data);\r\n            setIsLoding(false)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        fetchViewData()\r\n    }, [id, edit])\r\n\r\n\r\n    const handleClick = () => {\r\n        onOpen()\r\n    }\r\n    return (\r\n        <div>\r\n            <Grid templateColumns=\"repeat(6, 1fr)\" mb={3} gap={1}>\r\n                <GridItem colStart={6} >\r\n                    <Flex justifyContent={\"right\"}>\r\n                        <Menu>\r\n                            <MenuButton variant=\"outline\" colorScheme='blackAlpha' va mr={2.5} as={Button} rightIcon={<ChevronDownIcon />}>\r\n                                Actions\r\n                            </MenuButton>\r\n                            <MenuDivider />\r\n                            <MenuList>\r\n                                <MenuItem onClick={() => handleClick()} icon={<AddIcon />}>Add</MenuItem>\r\n                                <MenuItem onClick={() => setEdit(true)} icon={<EditIcon />}>Edit</MenuItem>\r\n                                {data?.role !== 'admin' && JSON.parse(localStorage.getItem('user'))?.role === 'admin' && <>\r\n                                    <MenuDivider />\r\n                                    <MenuItem onClick={() => setDelete(true)} icon={<DeleteIcon />}>Delete</MenuItem>\r\n                                </>}\r\n                            </MenuList>\r\n                        </Menu>\r\n                        <Link to=\"/task\">\r\n                            <Button leftIcon={<IoIosArrowBack />} variant=\"brand\">\r\n                                Back\r\n                            </Button>\r\n                        </Link>\r\n                    </Flex>\r\n                </GridItem>\r\n            </Grid>\r\n            <Card>\r\n                <Grid templateColumns=\"repeat(12, 1fr)\" gap={3} >\r\n\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Title </Text>\r\n                        <Text>{data?.title ? data?.title : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Related To </Text>\r\n                        <Text>{data?.category ? data?.category : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task start </Text>\r\n                        <Text>{data?.start ? moment(data?.start).format('L LT') : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task end  </Text>\r\n                        <Text>{data?.end ? moment(data?.end).format('L LT') : moment(data?.start).format('L')}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Link </Text>\r\n                        {data?.url ?\r\n                            <a target='_blank' href={data?.url}>\r\n                                <IconButton borderRadius=\"10px\" size=\"md\" icon={<BiLink />} />\r\n                            </a> : '-'\r\n                        }\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task reminder </Text>\r\n                        <Text>{data?.reminder ? data?.reminder : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> assignment To  </Text>\r\n                        <Link to={data?.assignmentTo ? user?.role !== 'admin' ? `/contactView/${data?.assignmentTo}` : `/admin/contactView/${data?.assignmentTo}` : user?.role !== 'admin' ? `/leadView/${data?.assignmentToLead}` : `/admin/leadView/${data?.assignmentToLead}`}>\r\n                            <Text color='green.400' sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{data?.assignmentToName ? data?.assignmentToName : ' - '}</Text>\r\n                        </Link>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task createBy </Text>\r\n                        <Text>{data?.createByName ? data?.createByName : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task Description</Text>\r\n                        <Text>{data?.description ? data?.description : ' - '}</Text>\r\n                    </GridItem>\r\n                    <GridItem colSpan={{ base: 12 }} >\r\n                        <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Task notes </Text>\r\n                        <Text>{data?.notes ? data?.notes : ' - '}</Text>\r\n                    </GridItem>\r\n                </Grid>\r\n            </Card>\r\n            <Card mt={3}>\r\n                <Grid templateColumns=\"repeat(6, 1fr)\" gap={1}>\r\n                    <GridItem colStart={6} >\r\n                        <Flex justifyContent={\"right\"}>\r\n                            <Button onClick={() => setEdit(true)} leftIcon={<EditIcon />} mr={2.5} variant=\"outline\" colorScheme=\"green\">Edit</Button>\r\n                            {data?.role !== 'admin' && JSON.parse(localStorage.getItem('user'))?.role === 'admin' && <Button style={{ background: 'red.800' }} onClick={() => setDelete(true)} leftIcon={<DeleteIcon />} colorScheme=\"red\" >Delete</Button>}\r\n                        </Flex>\r\n                    </GridItem>\r\n                </Grid>\r\n            </Card>\r\n            {/* Addtask modal */}\r\n            <AddTask isOpen={isOpen} onClose={onClose} />\r\n            {/* Edittask modal */}\r\n            <EditTask isOpen={edit} onClose={setEdit} viewClose={onClose} id={id?.event ? id?.event?._def?.extendedProps?._id : id} />\r\n            {/* Deletetask modal */}\r\n            <DeleteTask isOpen={deleteModel} onClose={setDelete} viewClose={onClose} url='api/task/delete/' method='one' id={id?.event ? id?.event?._def?.extendedProps?._id : id} redirectPage={\"/task\"} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskView\r\n","import { createIcon } from '@chakra-ui/react';\n\nconst AddIcon = createIcon({\n  d: \"M0,12a1.5,1.5,0,0,0,1.5,1.5h8.75a.25.25,0,0,1,.25.25V22.5a1.5,1.5,0,0,0,3,0V13.75a.25.25,0,0,1,.25-.25H22.5a1.5,1.5,0,0,0,0-3H13.75a.25.25,0,0,1-.25-.25V1.5a1.5,1.5,0,0,0-3,0v8.75a.25.25,0,0,1-.25.25H1.5A1.5,1.5,0,0,0,0,12Z\",\n  displayName: \"AddIcon\"\n});\n\nexport { AddIcon };\n","import { createIcon } from '@chakra-ui/react';\n\nconst ChevronDownIcon = createIcon({\n  displayName: \"ChevronDownIcon\",\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n});\n\nexport { ChevronDownIcon };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { createIcon } from '@chakra-ui/react';\n\nconst EditIcon = createIcon({\n  displayName: \"EditIcon\",\n  path: /* @__PURE__ */ jsxs(\"g\", { fill: \"none\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeWidth: \"2\", children: [\n    /* @__PURE__ */ jsx(\"path\", { d: \"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\" }),\n    /* @__PURE__ */ jsx(\"path\", { d: \"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\" })\n  ] })\n});\n\nexport { EditIcon };\n","'use client';\nimport { isObject } from '@chakra-ui/utils';\nimport { useMediaQuery } from './use-media-query.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\n\nfunction useBreakpoint(arg) {\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const theme = useTheme();\n  const breakpoints = theme.__breakpoints.details.map(\n    ({ minMaxQuery, breakpoint }) => ({\n      breakpoint,\n      query: minMaxQuery.replace(\"@media screen and \", \"\")\n    })\n  );\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(\n    breakpoints.map((bp) => bp.query),\n    { fallback, ssr: opts.ssr }\n  );\n  const index = values.findIndex((value) => value == true);\n  return breakpoints[index]?.breakpoint ?? opts.fallback;\n}\n\nexport { useBreakpoint };\n","'use client';\nimport { useState, useEffect } from 'react';\nimport { useEnvironment } from '../env/env.mjs';\n\nfunction useMediaQuery(query, options = {}) {\n  const { ssr = true, fallback } = options;\n  const { getWindow } = useEnvironment();\n  const queries = Array.isArray(query) ? query : [query];\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter((v) => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => ({\n      media: query2,\n      matches: ssr ? !!fallbackValues[index] : getWindow().matchMedia(query2).matches\n    }));\n  });\n  useEffect(() => {\n    const win = getWindow();\n    setValue(\n      queries.map((query2) => ({\n        media: query2,\n        matches: win.matchMedia(query2).matches\n      }))\n    );\n    const mql = queries.map((query2) => win.matchMedia(query2));\n    const handler = (evt) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media)\n            return { ...item, matches: evt.matches };\n          return item;\n        });\n      });\n    };\n    mql.forEach((mql2) => {\n      if (typeof mql2.addListener === \"function\") {\n        mql2.addListener(handler);\n      } else {\n        mql2.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach((mql2) => {\n        if (typeof mql2.removeListener === \"function\") {\n          mql2.removeListener(handler);\n        } else {\n          mql2.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [getWindow]);\n  return value.map((item) => item.matches);\n}\n\nexport { useMediaQuery };\n","'use client';\nimport { isObject, arrayToObjectNotation } from '@chakra-ui/utils';\nimport { getClosestValue } from './media-query.utils.mjs';\nimport { useBreakpoint } from './use-breakpoint.mjs';\nimport { useTheme } from '../system/use-theme.mjs';\n\nfunction useBreakpointValue(values, arg) {\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const breakpoint = useBreakpoint(opts);\n  const theme = useTheme();\n  if (!breakpoint)\n    return;\n  const breakpoints = Array.from(theme.__breakpoints?.keys || []);\n  const obj = Array.isArray(values) ? Object.fromEntries(\n    Object.entries(arrayToObjectNotation(values, breakpoints)).map(\n      ([key, value]) => [key, value]\n    )\n  ) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { useBreakpointValue };\n","'use client';\nimport { breakpoints } from '@chakra-ui/utils';\n\nfunction getClosestValue(values, breakpoint, breakpoints$1 = breakpoints) {\n  let index = Object.keys(values).indexOf(breakpoint);\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n  let stopIndex = breakpoints$1.indexOf(breakpoint);\n  while (stopIndex >= 0) {\n    const key = breakpoints$1[stopIndex];\n    if (values.hasOwnProperty(key)) {\n      index = stopIndex;\n      break;\n    }\n    stopIndex -= 1;\n  }\n  if (index !== -1) {\n    const key = breakpoints$1[index];\n    return values[key];\n  }\n  return void 0;\n}\n\nexport { getClosestValue };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { cx } from '@chakra-ui/utils';\nimport { useMenuStyles } from './menu.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst MenuDivider = (props) => {\n  const { className, ...rest } = props;\n  const styles = useMenuStyles();\n  return /* @__PURE__ */ jsx(\n    chakra.hr,\n    {\n      \"aria-orientation\": \"horizontal\",\n      className: cx(\"chakra-menu__divider\", className),\n      ...rest,\n      __css: styles.divider\n    }\n  );\n};\nMenuDivider.displayName = \"MenuDivider\";\n\nexport { MenuDivider };\n"],"names":["props","_JSON$parse","_JSON$parse2","_id$event2","_id$event2$_def","_id$event2$_def$exten","_id$event3","_id$event3$_def","_id$event3$_def$exten","params","useParams","id","user","JSON","parse","localStorage","getItem","data","setData","useState","isLoding","setIsLoding","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","useEffect","async","_id$event","_id$event$_def","_id$event$_def$extend","result","getApi","event","_def","extendedProps","_id","fetchViewData","_jsxs","children","_jsx","Grid","templateColumns","mb","gap","GridItem","colStart","Flex","justifyContent","Menu","MenuButton","variant","colorScheme","va","mr","as","Button","rightIcon","ChevronDownIcon","MenuDivider","MenuList","MenuItem","onClick","icon","AddIcon","EditIcon","role","_Fragment","DeleteIcon","Link","to","leftIcon","IoIosArrowBack","Card","colSpan","base","md","Text","fontSize","fontWeight","color","title","category","start","moment","format","end","url","target","href","IconButton","borderRadius","size","BiLink","reminder","assignmentTo","assignmentToLead","sx","textDecoration","assignmentToName","createByName","description","notes","mt","style","background","AddTask","EditTask","viewClose","DeleteTask","method","redirectPage","createIcon","d","displayName","path","jsxs","fill","stroke","strokeLinecap","strokeWidth","jsx","useBreakpoint","arg","opts","isObject","fallback","breakpoints","useTheme","__breakpoints","details","map","_ref","minMaxQuery","breakpoint","query","replace","bp","values","options","arguments","length","undefined","ssr","getWindow","useEnvironment","queries","Array","isArray","fallbackValues","filter","v","value","setValue","query2","index","media","matches","matchMedia","win","mql","handler","evt","prev","slice","item","forEach","mql2","addListener","addEventListener","removeListener","removeEventListener","useMediaQuery","findIndex","useBreakpointValue","theme","from","keys","breakpoints$1","Object","indexOf","stopIndex","key","hasOwnProperty","getClosestValue","fromEntries","entries","arrayToObjectNotation","className","rest","styles","useMenuStyles","chakra","hr","cx","__css","divider"],"sourceRoot":""}