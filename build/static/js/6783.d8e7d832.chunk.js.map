{"version":3,"file":"static/js/6783.d8e7d832.chunk.js","mappings":"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","sources":["components/card/Card.js","components/countUpComponent/countUpComponent.js","components/pagination/Pagination.js","components/spinner/Spinner.js","schema/contactSchema.js","schema/propertySchema.js","schema/leadSchema.js","schema/userSchema.js","schema/loginSchema.js","schema/emailSchema.js","schema/document.js","schema/phoneCallSchema.js","schema/textMsgSchema.js","schema/taskSchema.js","schema/meetingSchema.js","views/admin/emailHistory/components/AddEmail.js","views/admin/lead/components/CheckTable.js","views/admin/lead/index.js","views/admin/phoneCall/components/AddPhoneCall.js","../node_modules/@chakra-ui/icons/dist/esm/Add.mjs","../node_modules/@chakra-ui/icons/dist/esm/Close.mjs","../node_modules/@chakra-ui/icons/dist/esm/Delete.mjs","../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox-context.mjs","../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox-icon.mjs","../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox.mjs","../node_modules/@chakra-ui/react/dist/esm/checkbox/use-initial-animation-state.mjs","../node_modules/@chakra-ui/react/dist/esm/grid/grid-item.mjs","../node_modules/@chakra-ui/react/dist/esm/grid/grid.mjs","../node_modules/@chakra-ui/react/dist/esm/textarea/textarea.mjs"],"sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction Card(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"Card\", { variant });\r\n\r\n  return (\r\n    <Box __css={styles} height={'100%'} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction CountUpComponent({ targetNumber }) {\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (count < targetNumber) {\r\n                setCount(prevCount => prevCount + 1);\r\n            }\r\n        }, targetNumber > 500 ? 0 : 20); // Change the interval duration as needed (in milliseconds)\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [count, targetNumber]);\r\n\r\n    return <span>{typeof targetNumber === \"number\" ? count : targetNumber}</span>\r\n}\r\n\r\nexport default CountUpComponent;\r\n","import { ArrowLeftIcon, ArrowRightIcon, ChevronLeftIcon, ChevronRightIcon } from '@chakra-ui/icons';\r\nimport { Flex, IconButton, NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, Select, Text, Tooltip } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\n\r\nconst Pagination = (props) => {\r\n    const { gotoPage, gopageValue, setGopageValue, pageCount, canPreviousPage, previousPage, canNextPage, pageOptions, setPageSize, nextPage, pageSize, pageIndex } = props\r\n\r\n    useEffect(() => {\r\n        setGopageValue(1)\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <Flex justifyContent=\"space-between\" mt={2} alignItems=\"center\">\r\n            {pageOptions?.length !== 1 && <Flex>\r\n                <Tooltip label=\"First Page\">\r\n                    <IconButton\r\n                        onClick={() => { gotoPage(0); setGopageValue(1) }}\r\n                        isDisabled={!canPreviousPage}\r\n                        icon={<ArrowLeftIcon h={3} w={3} />}\r\n                        mr={4}\r\n                    />\r\n                </Tooltip>\r\n                <Tooltip label=\"Previous Page\">\r\n                    <IconButton\r\n                        onClick={() => { previousPage(); setGopageValue((pre) => pre - 1) }}\r\n                        isDisabled={!canPreviousPage}\r\n                        icon={<ChevronLeftIcon h={6} w={6} />}\r\n                    />\r\n                </Tooltip>\r\n            </Flex>}\r\n\r\n            <Flex alignItems=\"center\">\r\n                {pageOptions?.length !== 1 && <>\r\n                    <Text flexShrink=\"0\" mr={8}>\r\n                        Page{\" \"}\r\n                        <Text fontWeight=\"bold\" as=\"span\">\r\n                            {pageIndex + 1}\r\n                        </Text>{\" \"}\r\n                        of{\" \"}\r\n                        <Text fontWeight=\"bold\" as=\"span\">\r\n                            {pageOptions?.length}\r\n                        </Text>\r\n                    </Text>\r\n                    <Text flexShrink=\"0\">Go to page:</Text>{\" \"}\r\n                    <NumberInput\r\n                        ml={2}\r\n                        mr={8}\r\n                        w={28}\r\n                        min={1}\r\n                        max={pageOptions?.length}\r\n                        value={gopageValue}\r\n                        onChange={(value) => {\r\n                            const page = value ? value - 1 : 0;\r\n                            gotoPage(page);\r\n                            setGopageValue(value)\r\n                        }}\r\n                        defaultValue={pageIndex + 1}\r\n                    >\r\n                        <NumberInputField />\r\n                        <NumberInputStepper>\r\n                            <NumberIncrementStepper />\r\n                            <NumberDecrementStepper />\r\n                        </NumberInputStepper>\r\n                    </NumberInput>\r\n                </>}\r\n                <Select\r\n                    w={32}\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        setPageSize(Number(e.target.value));\r\n                    }}\r\n                >\r\n                    {[5, 10, 20, 30, 40, 50].map((pageSize) => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            Show {pageSize}\r\n                        </option>\r\n                    ))}\r\n                </Select>\r\n            </Flex>\r\n\r\n            {pageOptions?.length !== 1 &&\r\n                <Flex>\r\n                    <Tooltip label=\"Next Page\">\r\n                        <IconButton\r\n                            onClick={() => { nextPage(); setGopageValue((pre) => pre + 1) }}\r\n                            isDisabled={!canNextPage}\r\n                            icon={<ChevronRightIcon h={6} w={6} />}\r\n                        />\r\n                    </Tooltip>\r\n                    <Tooltip label=\"Last Page\">\r\n                        <IconButton\r\n                            onClick={() => { gotoPage(pageCount - 1); setGopageValue(pageCount) }}\r\n                            isDisabled={!canNextPage}\r\n                            icon={<ArrowRightIcon h={3} w={3} />}\r\n                            ml={4}\r\n                        />\r\n                    </Tooltip>\r\n                </Flex>}\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import './style.css';\r\nconst Spinner = () => <div className=\"loader\"></div>;\r\n\r\nexport default Spinner;","import * as yup from 'yup'\r\n\r\nexport const contactSchema = yup.object({\r\n    // 1. Basic Information\r\n    firstName: yup.string().min(2).required('First Name is required'),\r\n    lastName: yup.string().min(2).required('Last Name is required'),\r\n    title: yup.string().required('Title is required'),\r\n    email: yup.string().email().required('Email is required'),\r\n    phoneNumber: yup.number().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required('Phonenumber is Required'),\r\n    mobileNumber: yup.number().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').notRequired(),\r\n    physicalAddress: yup.string().required('Physical address is required'),\r\n    mailingAddress: yup.string(),\r\n    preferredContactMethod: yup.string().required('Preferred contact method is required'),\r\n    // 2.Lead Source Information\r\n    leadSource: yup.string(),\r\n    referralSource: yup.string(),\r\n    campaignSource: yup.string(),\r\n    // 3. Status and Classifications\r\n    leadStatus: yup.string(),\r\n    leadRating: yup.number(),\r\n    leadConversionProbability: yup.string(),\r\n    // 5. History:\r\n    emailHistory: yup.string(),\r\n    phoneCallHistory: yup.string(),\r\n    meetingHistory: yup.string(),\r\n    notesandComments: yup.string(),\r\n    // 6. Tags or Categories\r\n    tagsOrLabelsForcategorizingcontacts: yup.string(),\r\n    // 7. Important Dates:\r\n    birthday: yup.date(),\r\n    anniversary: yup.date(),\r\n    keyMilestones: yup.string(),\r\n    // 8. Additional Personal Information\r\n    dob: yup.string(),\r\n    gender: yup.string(),\r\n    occupation: yup.string(),\r\n    interestsOrHobbies: yup.string(),\r\n    // 9. Preferred  Communication Preferences:\r\n    communicationFrequency: yup.string(),\r\n    preferences: yup.string(),\r\n    // 10. Social Media Profiles:\r\n    linkedInProfile: yup.string(),\r\n    facebookProfile: yup.string(),\r\n    twitterHandle: yup.string(),\r\n    otherProfiles: yup.string(),\r\n    // 11. Lead Assignment and Team Collaboration:\r\n    agentOrTeamMember: yup.string(),\r\n    internalNotesOrComments: yup.string(),\r\n    createBy: yup.string(),\r\n    // 12. Custom Fields:\r\n})","import * as yup from 'yup'\r\nconst currentYear = new Date().getFullYear()\r\n\r\nexport const propertySchema = yup.object({\r\n    // 1. basicPropertyInformation:\r\n    propertyType: yup.string().required(\"Property Type Is required\"),\r\n    propertyAddress: yup.string().required(\"Property Address Is required\"),\r\n    listingPrice: yup.string().required(\"Listing Price Is required\"),\r\n    squareFootage: yup.string().required(\"Square Footage Is required\"),\r\n    numberofBedrooms: yup.number().required(\"Number Of Bedrooms Is required\"),\r\n    numberofBathrooms: yup.number().required(\"Number Of Bathrooms Is required\"),\r\n    yearBuilt: yup.number().min(1000).max(currentYear).required(\"Year Built Is required\"),\r\n    propertyDescription: yup.string().required(\"Property Description Is required\"),\r\n    //2. Property Features and Amenities:\r\n    lotSize: yup.string(),\r\n    parkingAvailability: yup.string(),\r\n    appliancesIncluded: yup.string(),\r\n    heatingAndCoolingSystems: yup.string(),\r\n    flooringType: yup.string(),\r\n    exteriorFeatures: yup.string(),\r\n    communityAmenities: yup.string(),\r\n    //3. Media and Visuals:\r\n    propertyPhotos: yup.string(),\r\n    virtualToursOrVideos: yup.string(),\r\n    floorPlans: yup.string(),\r\n    propertyDocuments: yup.string(),\r\n    //4. Listing and Marketing Details:\r\n    listingStatus: yup.string(),\r\n    listingAgentOrTeam: yup.string(),\r\n    listingDate: yup.string(),\r\n    marketingDescription: yup.string(),\r\n    multipleListingService: yup.string(),\r\n    //5. Property History:\r\n    previousOwners: yup.number().min(0),\r\n    purchaseHistory: yup.string(),\r\n    //6. Financial Information:\r\n    propertyTaxes: yup.string(),\r\n    homeownersAssociation: yup.string(),\r\n    mortgageInformation: yup.string(),\r\n    //7. Contacts Associated with Property:\r\n    sellers: yup.string(),\r\n    buyers: yup.string(),\r\n    propertyManagers: yup.string(),\r\n    contractorsOrServiceProviders: yup.string(),\r\n    //8. Property Notes and Comments:\r\n    internalNotesOrComments: yup.string(),\r\n    //9. Custom Fields\r\n})","import * as yup from 'yup'\r\n\r\n\r\nexport const leadSchema = yup.object({\r\n    // Lead Information:\r\n    leadName: yup.string().required(\"Lead Name Is required\"),\r\n    leadEmail: yup.string().email().required(\"Lead Email Is required\"),\r\n    leadPhoneNumber: yup.string().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required(\"Lead Phone Number Is required\"),\r\n    leadAddress: yup.string().required(\"Lead Address Is required\"),\r\n    // Lead Source and Details:\r\n    leadSource: yup.string(),\r\n    leadStatus: yup.string(),\r\n    leadSourceDetails: yup.string(),\r\n    leadCampaign: yup.string(),\r\n    leadSourceChannel: yup.string(),\r\n    leadSourceMedium: yup.string(),\r\n    leadSourceCampaign: yup.string(),\r\n    leadSourceReferral: yup.string(),\r\n    // Lead Assignment and Ownership:\r\n    leadAssignedAgent: yup.string(),\r\n    leadOwner: yup.string(),\r\n    leadCommunicationPreferences: yup.string(),\r\n    // Lead Dates and Follow-up:\r\n    leadCreationDate: yup.date().required(\"Lead Creation Date Is required\"),\r\n    leadConversionDate: yup.date().required(\"Lead Conversion Date Is required\"),\r\n    leadFollowUpDate: yup.date().required(\"lead Follow Up Date  Is required\"),\r\n    leadFollowUpStatus: yup.string(),\r\n    // Lead Scoring and Nurturing:\r\n    leadScore: yup.number().required(\"Lead Score Is required\"),\r\n    leadNurturingWorkflow: yup.string(),\r\n    leadEngagementLevel: yup.string(),\r\n    leadConversionRate: yup.number().required(\"lead Conversion Rate Is required\"),\r\n    leadNurturingStage: yup.string(),\r\n    leadNextAction: yup.string(),\r\n})\r\n","import * as yup from 'yup'\r\n\r\nexport const userSchema = yup.object({\r\n    firstName: yup.string().required(\"First Name Is required\"),\r\n    lastName: yup.string(),\r\n    phoneNumber: yup.string().required(\"Phone Number Is required\").matches(/^\\d{10}$/, \"Phone Number must be exactly 10 digits\"),\r\n    username: yup.string().email().required(\"Email Is required\"),\r\n})","import * as yup from 'yup'\r\n\r\nexport const loginSchema = yup.object({\r\n    username: yup.string().email().required(\"Email Is required\"),\r\n    password: yup.string().required(\"Password Is required\")\r\n})","import * as yup from 'yup'\r\n\r\nexport const emailSchema = yup.object({\r\n    sender: yup.string().required(\"Sender Is required\"),\r\n    recipient: yup.string().email().required(\"Recipient Is required\"),\r\n    cc: yup.string().email(),\r\n    bcc: yup.string().email(),\r\n    relatedToContact: yup.string(),\r\n    relatedToLead: yup.string(),\r\n    subject: yup.string(),\r\n    message: yup.string(),\r\n    createBy: yup.string(),\r\n    createByLead: yup.string(),\r\n}).test('createBy-or-createByLead-required', 'Recipient Is required', function (value) {\r\n    if (!value.createBy && !value.createByLead) {\r\n        return this.createError({\r\n            path: 'createBy',\r\n            message: 'Recipient Is required',\r\n        });\r\n    }\r\n});\r\n","import * as yup from 'yup'\r\n\r\n\r\n// Define the yup schema for the main document\r\nexport const documentSchema = yup.object().shape({\r\n    folderName: yup.string().required('Folder Name is required'),\r\n    filename: yup.string().min(2, 'File Name Must Be At Least 2 Characters'),\r\n    createBy: yup.string().required()\r\n});\r\n\r\n","import * as yup from 'yup'\r\n\r\nexport const phoneCallSchema = yup.object({\r\n    sender: yup.string().required(\"Sender Is required\"),\r\n    // recipient: yup.number().min(99999999, 'Phone number is invalid length').max(999999999999, 'Phone number is invalid').required(\"Recipient Is required\"),\r\n    recipient: yup.number().required(\"Recipient Is required\"),\r\n    callDuration: yup.string(),\r\n    callNotes: yup.string(),\r\n    createBy: yup.string(),\r\n    createByLead: yup.string(),\r\n    category: yup.string()\r\n}).test('createBy-or-createByLead-required', 'Recipient Is required', function (value) {\r\n    if (!value.createBy && !value.createByLead) {\r\n        return this.createError({\r\n            path: 'createBy',\r\n            message: 'Recipient Is required',\r\n        });\r\n    }\r\n});\r\n","import * as yup from 'yup'\r\n\r\nexport const textMsgSchema = yup.object({\r\n    sender: yup.string().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required(\"Sender Is required\"),\r\n    to: yup.string().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required(\"To Is required\"),\r\n    message: yup.string(),\r\n    createFor: yup.string().required(\"Create By Is required\")\r\n})","import * as yup from 'yup'\r\n\r\nexport const TaskSchema = yup.object({\r\n    title: yup.string().required(\"Title Is required\"),\r\n    category: yup.string(),\r\n    description: yup.string(),\r\n    notes: yup.string(),\r\n    // assignmentTo: yup.string(),\r\n    // assignmentToLead: yup.string(),\r\n    reminder: yup.string(),\r\n    start: yup.string().required(\"Start Is required\"),\r\n    end: yup.string(),\r\n    backgroundColor: yup.string(),\r\n    borderColor: yup.string(),\r\n    textColor: yup.string(),\r\n    display: yup.string(),\r\n    url: yup.string(),\r\n    createBy: yup.string(),\r\n})","import * as yup from 'yup'\r\n\r\nexport const MeetingSchema = yup.object({\r\n    agenda: yup.string().required(\"Agenda Is required\"),\r\n    attendes: yup.array().of(yup.string().trim()),\r\n    attendesLead: yup.array().of(yup.string().trim()),\r\n    location: yup.string(),\r\n    related: yup.string(),\r\n    dateTime: yup.string().required(\"Date Time Is required\"),\r\n    notes: yup.string(),\r\n    createFor: yup.string(),\r\n    createdBy: yup.string(),\r\n})","import { Button, FormLabel, Grid, GridItem, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text, Textarea } from '@chakra-ui/react';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport { useFormik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { BsFillSendFill } from 'react-icons/bs';\r\nimport { emailSchema } from 'schema';\r\nimport { getApi, postApi } from 'services/api';\r\n\r\n\r\nconst AddEmailHistory = (props) => {\r\n    const { onClose, isOpen, fetchData } = props\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n    const [isLoding, setIsLoding] = useState(false)\r\n    const [contactModelOpen, setContactModel] = useState(false);\r\n    const [leadModelOpen, setLeadModel] = useState(false);\r\n\r\n    const initialValues = {\r\n        sender: user?._id,\r\n        recipient: '',\r\n        subject: '',\r\n        message: '',\r\n        createBy: '',\r\n        createByLead: '',\r\n        startDate: '',\r\n        endDate: '',\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: emailSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            AddData();\r\n            resetForm();\r\n        },\r\n    });\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, } = formik\r\n\r\n    const AddData = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            let response = await postApi('api/email/add', values)\r\n            if (response.status === 200) {\r\n                props.onClose();\r\n                fetchData()\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    };\r\n\r\n    const fetchRecipientData = async () => {\r\n        if (props.id && props.lead !== 'true') {\r\n            let response = await getApi('api/contact/view/', props.id)\r\n            if (response?.status === 200) {\r\n                setFieldValue('recipient', response?.data?.contact?.email);\r\n                setFieldValue('createBy', props.id);\r\n                values.recipient = response?.data?.contact?.email\r\n            }\r\n        } else if (props.id && props.lead === 'true') {\r\n            let response = await getApi('api/lead/view/', props.id)\r\n            if (response?.status === 200) {\r\n                setFieldValue('recipient', response?.data?.lead?.leadEmail);\r\n                setFieldValue('createByLead', props.id);\r\n                values.recipient = response?.data?.lead?.leadEmail\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchRecipientData()\r\n    }, [props.id])\r\n\r\n    return (\r\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Send Email </ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n\r\n                    <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\r\n\r\n                        <GridItem colSpan={{ base: 12 }}>\r\n                            <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                Recipient<Text color={\"red\"}>*</Text>\r\n                            </FormLabel>\r\n                            <Input\r\n                                fontSize='sm'\r\n                                onChange={handleChange} onBlur={handleBlur}\r\n                                value={values.recipient}\r\n                                name=\"recipient\"\r\n                                placeholder='Recipient'\r\n                                fontWeight='500'\r\n                                borderColor={errors.recipient && touched.recipient ? \"red.300\" : null}\r\n                            />\r\n                            <Text mb='10px' color={'red'}> {errors.recipient && touched.recipient && errors.recipient}</Text>\r\n                        </GridItem>\r\n                        <GridItem colSpan={{ base: 12 }}>\r\n                            <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                Subject\r\n                            </FormLabel>\r\n                            <Input\r\n                                fontSize='sm'\r\n                                placeholder='Enter subject'\r\n                                onChange={handleChange} onBlur={handleBlur}\r\n                                value={values.subject}\r\n                                name=\"subject\"\r\n                                fontWeight='500'\r\n                                borderColor={errors.subject && touched.subject ? \"red.300\" : null}\r\n                            />\r\n                            <Text mb='10px' color={'red'}> {errors.subject && touched.subject && errors.subject}</Text>\r\n                        </GridItem>\r\n                        <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                            <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                Start Date\r\n                            </FormLabel>\r\n                            <Input\r\n                                type=\"datetime-local\"\r\n                                fontSize='sm'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.startDate}\r\n                                name=\"startDate\"\r\n                                fontWeight='500'\r\n                                borderColor={errors?.startDate && touched?.startDate ? \"red.300\" : null}\r\n                            />\r\n                            <Text mb='10px' color={'red'}> {errors.startDate && touched.startDate && errors.startDate}</Text>\r\n                        </GridItem>\r\n                        <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                            <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                End Date\r\n                            </FormLabel>\r\n                            <Input\r\n                                type='datetime-local'\r\n                                fontSize='sm'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.endDate}\r\n                                name=\"endDate\"\r\n                                fontWeight='500'\r\n                                borderColor={errors?.endDate && touched?.endDate ? \"red.300\" : null}\r\n                            />\r\n                            <Text mb='10px' color={'red'}> {errors.endDate && touched.endDate && errors.endDate}</Text>\r\n                        </GridItem>\r\n                        <GridItem colSpan={{ base: 12 }}>\r\n                            <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                Message\r\n                            </FormLabel>\r\n                            <Textarea\r\n                                fontSize='sm'\r\n                                placeholder='Here Type message'\r\n                                resize={'none'}\r\n                                onChange={handleChange} onBlur={handleBlur}\r\n                                value={values.message}\r\n                                name=\"message\"\r\n                                fontWeight='500'\r\n                                borderColor={errors.message && touched.message ? \"red.300\" : null}\r\n                            />\r\n                            <Text mb='10px' color={'red'}> {errors.message && touched.message && errors.message}</Text>\r\n                        </GridItem>\r\n\r\n                    </Grid>\r\n\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button variant='brand' onClick={handleSubmit} rightIcon={<BsFillSendFill />} disabled={isLoding ? true : false} >{isLoding ? <Spinner /> : 'Send'}</Button>\r\n                    <Button onClick={() => {\r\n                        formik.resetForm()\r\n                        onClose()\r\n                    }}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddEmailHistory\r\n","import {\r\n  Box,\r\n  Checkbox,\r\n  Flex,\r\n  Table,\r\n  Tbody,\r\n  Td,\r\n  Text,\r\n  Th,\r\n  Thead,\r\n  Tr,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\nimport { useEffect, useMemo, useState } from \"react\";\r\nimport {\r\n  useGlobalFilter,\r\n  usePagination,\r\n  useSortBy,\r\n  useTable,\r\n} from \"react-table\";\r\n\r\n// Custom components\r\nimport { DeleteIcon } from \"@chakra-ui/icons\";\r\nimport Card from \"components/card/Card\";\r\nimport CountUpComponent from \"components/countUpComponent/countUpComponent\";\r\nimport Pagination from \"components/pagination/Pagination\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\nimport { FaSort, FaSortDown, FaSortUp } from \"react-icons/fa\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getApi } from \"services/api\";\r\nimport Delete from \"../Delete\";\r\nimport AddEmailHistory from \"views/admin/emailHistory/components/AddEmail\";\r\nimport AddPhoneCall from \"views/admin/phoneCall/components/AddPhoneCall\";\r\n\r\nexport default function CheckTable(props) {\r\n  const { columnsData } = props;\r\n  const textColor = useColorModeValue(\"secondaryGray.900\", \"white\");\r\n  const borderColor = useColorModeValue(\"gray.200\", \"whiteAlpha.100\");\r\n  const columns = useMemo(() => columnsData, [columnsData]);\r\n  const [selectedValues, setSelectedValues] = useState([]);\r\n  const [gopageValue, setGopageValue] = useState()\r\n  const [deleteModel, setDelete] = useState(false);\r\n  const [addEmailHistory, setAddEmailHistory] = useState(false);\r\n  const [addPhoneCall, setAddPhoneCall] = useState(false);\r\n  const [selectedId, setSelectedId] = useState();\r\n  const [callSelectedId, setCallSelectedId] = useState();\r\n\r\n  // const data = useMemo(() => tableData, [tableData]);\r\n  const [data, setData] = useState([])\r\n  const user = JSON.parse(localStorage.getItem(\"user\"))\r\n  const [isLoding, setIsLoding] = useState(false)\r\n\r\n  const fetchData = async () => {\r\n    setIsLoding(true)\r\n    let result = await getApi(user.role === 'admin' ? 'api/lead/' : `api/lead/?createBy=${user._id}`);\r\n    setData(result.data);\r\n    setIsLoding(false)\r\n  }\r\n\r\n  const tableInstance = useTable(\r\n    {\r\n      columns, data,\r\n      initialState: { pageIndex: 0 }\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize }\r\n  } = tableInstance;\r\n\r\n\r\n  if (pageOptions.length < gopageValue) {\r\n    setGopageValue(pageOptions.length)\r\n  }\r\n\r\n  const handleCheckboxChange = (event, value) => {\r\n    if (event.target.checked) {\r\n      setSelectedValues((prevSelectedValues) => [...prevSelectedValues, value]);\r\n    } else {\r\n      setSelectedValues((prevSelectedValues) =>\r\n        prevSelectedValues.filter((selectedValue) => selectedValue !== value)\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [deleteModel, props.isOpen])\r\n\r\n  return (\r\n    <Card\r\n      direction=\"column\"\r\n      w=\"100%\"\r\n      px=\"0px\"\r\n      overflowX={{ sm: \"scroll\", lg: \"hidden\" }}\r\n    >\r\n      <Flex px=\"25px\" justify=\"space-between\" mb=\"20px\" align=\"center\">\r\n        <Text\r\n          color={textColor}\r\n          fontSize=\"22px\"\r\n          fontWeight=\"700\"\r\n          lineHeight=\"100%\"\r\n        >\r\n          Leads  (<CountUpComponent targetNumber={data?.length} />)\r\n        </Text>\r\n        {/* <Menu /> */}\r\n        {selectedValues.length > 0 && <DeleteIcon onClick={() => setDelete(true)} color={'red'} />}\r\n      </Flex>\r\n      {/* Delete model */}\r\n      <Delete isOpen={deleteModel} onClose={setDelete} setSelectedValues={setSelectedValues} url='api/lead/deleteMany' data={selectedValues} method='many' />\r\n      <Box overflowY={\"auto\"} className=\"table-fix-container\">\r\n        <Table {...getTableProps()} variant=\"simple\" color=\"gray.500\" mb=\"24px\">\r\n          <Thead>\r\n            {headerGroups?.map((headerGroup, index) => (\r\n              <Tr {...headerGroup.getHeaderGroupProps()} key={index}>\r\n                {headerGroup.headers?.map((column, index) => (\r\n                  <Th\r\n                    {...column.getHeaderProps(column.isSortable !== false && column.getSortByToggleProps())}\r\n                    pe=\"10px\"\r\n                    key={index}\r\n                    borderColor={borderColor}\r\n                  >\r\n                    <Flex\r\n                      justify=\"space-between\"\r\n                      align=\"center\"\r\n                      fontSize={{ sm: \"10px\", lg: \"12px\" }}\r\n                      color=\"gray.400\"\r\n                    >\r\n                      {column.render(\"Header\")}\r\n                      {column.isSortable !== false && (\r\n                        <span>\r\n                          {column.isSorted ? (column.isSortedDesc ? <FaSortDown /> : <FaSortUp />) : <FaSort />}\r\n                        </span>\r\n                      )}\r\n                    </Flex>\r\n                  </Th>\r\n                ))}\r\n              </Tr>\r\n            ))}\r\n          </Thead>\r\n          <Tbody {...getTableBodyProps()}>\r\n\r\n            {isLoding ?\r\n              <Tr>\r\n                <Td colSpan={columns?.length}>\r\n                  <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                    <Spinner />\r\n                  </Flex>\r\n                </Td>\r\n              </Tr>\r\n              : data?.length === 0 ? (\r\n                <Tr>\r\n                  <Td colSpan={columns.length}>\r\n                    <Text textAlign={'center'} width=\"100%\" color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                      -- No Data Found --\r\n                    </Text>\r\n                  </Td>\r\n                </Tr>\r\n              ) : page?.map((row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <Tr {...row?.getRowProps()} key={i}>\r\n                    {row?.cells?.map((cell, index) => {\r\n                      let data = \"\";\r\n                      if (cell?.column.Header === \"#\") {\r\n                        data = (\r\n                          <Flex align=\"center\">\r\n                            <Checkbox colorScheme=\"brandScheme\" value={selectedValues} isChecked={selectedValues.includes(cell?.value)} onChange={(event) => handleCheckboxChange(event, cell?.value)} me=\"10px\" />\r\n                            <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                              {cell?.row?.index + 1}\r\n                            </Text>\r\n                          </Flex>\r\n                        );\r\n                      } else if (cell?.column.Header === \"Lead Name\") {\r\n                        data = (\r\n                          <Link to={user?.role !== 'admin' ? `/leadView/${cell?.row?.values._id}` : `/admin/leadView/${cell?.row?.values._id}`}>\r\n                            <Text\r\n                              me=\"10px\"\r\n                              sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}\r\n                              color='green.400'\r\n                              fontSize=\"sm\"\r\n                              fontWeight=\"700\"\r\n                            >\r\n                              {cell?.value}\r\n                            </Text>\r\n                          </Link>\r\n                        );\r\n                      } else if (cell?.column.Header === \"Lead Email\") {\r\n                        data = (\r\n                          <Text\r\n                            me=\"10px\"\r\n                            fontSize=\"sm\"\r\n                            fontWeight=\"700\"\r\n                            color='green.400'\r\n                            sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline', cursor: 'pointer' } }}\r\n                            onClick={() => {\r\n                              setAddEmailHistory(true)\r\n                              setSelectedId(cell?.row?.values._id)\r\n                            }\r\n                            }\r\n                          >\r\n                            {cell?.value\r\n                            }\r\n                          </Text>\r\n                        );\r\n                      } else if (cell?.column.Header === \"Lead PhoneNumber\") {\r\n                        data = (\r\n                          <Text\r\n                            me=\"10px\"\r\n                            fontSize=\"sm\"\r\n                            fontWeight=\"700\"\r\n                            color='green.400'\r\n                            sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline', cursor: 'pointer' } }}\r\n                            onClick={() => {\r\n                              setAddPhoneCall(true)\r\n                              setCallSelectedId(cell?.row?.values._id)\r\n                            }\r\n                            }\r\n                          >\r\n                            {cell?.value}\r\n                          </Text>\r\n                        );\r\n                      } else if (cell?.column.Header === \"Lead Address\") {\r\n                        data = (\r\n                          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                            {cell?.value}\r\n                          </Text>\r\n                        );\r\n                      } else if (cell?.column.Header === \"Lead Status\") {\r\n                        data = (\r\n                          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                            {cell?.value}\r\n                          </Text>\r\n                        );\r\n                      } else if (cell?.column.Header === \"Lead Owner\") {\r\n                        data = (\r\n                          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                            {cell?.value}\r\n                          </Text>\r\n                        );\r\n                      } else if (cell?.column.Header === \"Lead Score\") {\r\n                        data = (\r\n                          <Text color={textColor} fontSize=\"sm\" fontWeight=\"700\">\r\n                            {cell?.value}\r\n                          </Text>\r\n                        );\r\n                      }\r\n                      return (\r\n                        <Td\r\n                          {...cell?.getCellProps()}\r\n                          key={index}\r\n                          fontSize={{ sm: \"14px\" }}\r\n                          minW={{ sm: \"150px\", md: \"200px\", lg: \"auto\" }}\r\n                          borderColor=\"transparent\"\r\n                        >\r\n                          {data}\r\n                        </Td>\r\n                      );\r\n                    })}\r\n                  </Tr>\r\n                );\r\n              })}\r\n          </Tbody>\r\n        </Table>\r\n      </Box>\r\n      {data?.length > 5 && <Pagination gotoPage={gotoPage} gopageValue={gopageValue} setGopageValue={setGopageValue} pageCount={pageCount} canPreviousPage={canPreviousPage} previousPage={previousPage} canNextPage={canNextPage} pageOptions={pageOptions} setPageSize={setPageSize} nextPage={nextPage} pageSize={pageSize} pageIndex={pageIndex} />}\r\n\r\n      <AddEmailHistory fetchData={fetchData} isOpen={addEmailHistory} onClose={setAddEmailHistory} data={data?.contact} lead='true' id={selectedId} />\r\n      <AddPhoneCall fetchData={fetchData} isOpen={addPhoneCall} onClose={setAddPhoneCall} data={data?.contact} id={callSelectedId} lead='true' />\r\n    </Card>\r\n  );\r\n}\r\n","import { AddIcon } from \"@chakra-ui/icons\";\r\nimport { Button, Grid, GridItem, useDisclosure } from '@chakra-ui/react';\r\nimport { useEffect, useState } from 'react';\r\nimport Add from \"./Add\";\r\nimport CheckTable from './components/CheckTable';\r\n\r\n\r\nconst Index = () => {\r\n    const [columns, setColumns] = useState([]);\r\n\r\n    const tableColumns = [\r\n        { Header: \"#\", accessor: \"_id\", isSortable: false, width: 10 },\r\n        { Header: 'Lead Name', accessor: 'leadName', width: 20 },\r\n        { Header: \"Lead Status\", accessor: \"leadStatus\", },\r\n        { Header: \"Lead Email\", accessor: \"leadEmail\", },\r\n        { Header: \"Lead PhoneNumber\", accessor: \"leadPhoneNumber\", },\r\n        { Header: \"Lead Address\", accessor: \"leadAddress\", },\r\n        { Header: \"Lead Owner\", accessor: \"leadOwner\", },\r\n        { Header: \"Lead Score\", accessor: \"leadScore\", },\r\n    ];\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const size = \"lg\";\r\n\r\n    useEffect(() => {\r\n        setColumns(tableColumns)\r\n    }, [onClose])\r\n\r\n\r\n    const handleClick = () => {\r\n        onOpen()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid templateColumns=\"repeat(6, 1fr)\" mb={3} gap={1}>\r\n                <GridItem colStart={6} textAlign={\"right\"}>\r\n                    <Button onClick={() => handleClick()} leftIcon={<AddIcon />} variant=\"brand\">Add</Button>\r\n                </GridItem>\r\n            </Grid>\r\n            <CheckTable columnsData={columns} isOpen={isOpen} />\r\n            {/* Add Form */}\r\n            <Add isOpen={isOpen} size={size} onClose={onClose} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import { Button, FormLabel, Grid, GridItem, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text, Textarea } from '@chakra-ui/react';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport { useFormik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { BsFillTelephoneFill } from 'react-icons/bs';\r\nimport { phoneCallSchema } from 'schema';\r\nimport { getApi, postApi } from 'services/api';\r\n\r\nconst AddPhoneCall = (props) => {\r\n    const { onClose, isOpen, fetchData } = props\r\n    const [isLoding, setIsLoding] = useState(false)\r\n\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n\r\n    const initialValues = {\r\n        sender: user?._id,\r\n        recipient: '',\r\n        callDuration: '',\r\n        callNotes: '',\r\n        createBy: '',\r\n        createByLead: '',\r\n        startDate: '',\r\n        endDate: '',\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: phoneCallSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            AddData();\r\n            resetForm();\r\n        },\r\n    });\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue } = formik\r\n\r\n    const AddData = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            let response = await postApi('api/phoneCall/add', values)\r\n            if (response.status === 200) {\r\n                props.onClose();\r\n                fetchData()\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    };\r\n\r\n    const fetchDataR = async () => {\r\n        if (props.id && props.lead !== 'true') {\r\n            let response = await getApi('api/contact/view/', props.id)\r\n            if (response?.status === 200) {\r\n                setFieldValue('recipient', response?.data?.contact?.phoneNumber);\r\n                setFieldValue('createBy', props?.id);\r\n                values.recipient = response?.data?.contact?.phoneNumber\r\n            }\r\n        } else if (props.id && props.lead === 'true') {\r\n            let response = await getApi('api/lead/view/', props.id)\r\n            if (response?.status === 200) {\r\n                setFieldValue('recipient', response?.data?.lead?.leadPhoneNumber);\r\n                setFieldValue('createByLead', props.id);\r\n                values.recipient = response?.data?.lead?.leadPhoneNumber\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchDataR()\r\n    }, [props.id])\r\n\r\n\r\n    return (\r\n        <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n            <ModalOverlay />\r\n            <ModalContent>\r\n                <ModalHeader>Add Call </ModalHeader>\r\n                <ModalCloseButton />\r\n                <ModalBody>\r\n\r\n                    <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\r\n                        <GridItem colSpan={{ base: 12 }}>\r\n                            <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                Recipient<Text color={\"red\"}>*</Text>\r\n                            </FormLabel>\r\n                            <Input\r\n                                fontSize='sm'\r\n                                type='number'\r\n                                onChange={handleChange} onBlur={handleBlur}\r\n                                value={values.recipient}\r\n                                name=\"recipient\"\r\n                                placeholder='Recipient'\r\n                                fontWeight='500'\r\n                                borderColor={errors.recipient && touched.recipient ? \"red.300\" : null}\r\n                            />\r\n                            <Text mb='10px' color={'red'}> {errors.recipient && touched.recipient && errors.recipient}</Text>\r\n                        </GridItem>\r\n                        <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                            <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                Start Date\r\n                            </FormLabel>\r\n                            <Input\r\n                                type=\"datetime-local\"\r\n                                fontSize='sm'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.startDate}\r\n                                name=\"startDate\"\r\n                                fontWeight='500'\r\n                                borderColor={errors?.startDate && touched?.startDate ? \"red.300\" : null}\r\n                            />\r\n                            <Text mb='10px' color={'red'}> {errors.startDate && touched.startDate && errors.startDate}</Text>\r\n                        </GridItem>\r\n                        <GridItem colSpan={{ base: 12, md: 6 }} >\r\n                            <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                End Date\r\n                            </FormLabel>\r\n                            <Input\r\n                                type='datetime-local'\r\n                                fontSize='sm'\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                value={values.endDate}\r\n                                name=\"endDate\"\r\n                                fontWeight='500'\r\n                                borderColor={errors?.endDate && touched?.endDate ? \"red.300\" : null}\r\n                            />\r\n                            <Text mb='10px' color={'red'}> {errors.endDate && touched.endDate && errors.endDate}</Text>\r\n                        </GridItem>\r\n                        <GridItem colSpan={{ base: 12 }}>\r\n                            <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                Call Duration<Text color={\"red\"}>*</Text>\r\n                            </FormLabel>\r\n                            <Input\r\n                                fontSize='sm'\r\n                                onChange={handleChange} onBlur={handleBlur}\r\n                                value={values.callDuration}\r\n                                name=\"callDuration\"\r\n                                placeholder='call Duration'\r\n                                fontWeight='500'\r\n                                borderColor={errors.callDuration && touched.callDuration ? \"red.300\" : null}\r\n                            />\r\n                            <Text mb='10px' color={'red'}> {errors.callDuration && touched.callDuration && errors.callDuration}</Text>\r\n                        </GridItem>\r\n                        <GridItem colSpan={{ base: 12 }}>\r\n                            <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                Call Notes\r\n                            </FormLabel>\r\n                            <Textarea\r\n                                resize={'none'}\r\n                                fontSize='sm'\r\n                                placeholder='Enter Call Notes'\r\n                                onChange={handleChange} onBlur={handleBlur}\r\n                                value={values.callNotes}\r\n                                name=\"callNotes\"\r\n                                fontWeight='500'\r\n                                borderColor={errors.callNotes && touched.callNotes ? \"red.300\" : null}\r\n                            />\r\n                            <Text mb='10px' color={'red'}> {errors.callNotes && touched.callNotes && errors.callNotes}</Text>\r\n                        </GridItem>\r\n\r\n                    </Grid>\r\n\r\n\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button variant='brand' leftIcon={<BsFillTelephoneFill />} disabled={isLoding ? true : false} onClick={handleSubmit}>{isLoding ? <Spinner /> : 'Call'}</Button>\r\n                    <Button onClick={() => {\r\n                        formik.resetForm()\r\n                        onClose()\r\n                    }}>Close</Button>\r\n                </ModalFooter>\r\n            </ModalContent>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddPhoneCall\r\n","import { createIcon } from '@chakra-ui/react';\n\nconst AddIcon = createIcon({\n  d: \"M0,12a1.5,1.5,0,0,0,1.5,1.5h8.75a.25.25,0,0,1,.25.25V22.5a1.5,1.5,0,0,0,3,0V13.75a.25.25,0,0,1,.25-.25H22.5a1.5,1.5,0,0,0,0-3H13.75a.25.25,0,0,1-.25-.25V1.5a1.5,1.5,0,0,0-3,0v8.75a.25.25,0,0,1-.25.25H1.5A1.5,1.5,0,0,0,0,12Z\",\n  displayName: \"AddIcon\"\n});\n\nexport { AddIcon };\n","import { createIcon } from '@chakra-ui/react';\n\nconst CloseIcon = createIcon({\n  displayName: \"CloseIcon\",\n  d: \"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n});\n\nexport { CloseIcon };\n","import { jsx } from 'react/jsx-runtime';\nimport { createIcon } from '@chakra-ui/react';\n\nconst DeleteIcon = createIcon({\n  displayName: \"DeleteIcon\",\n  path: /* @__PURE__ */ jsx(\"g\", { fill: \"currentColor\", children: /* @__PURE__ */ jsx(\"path\", { d: \"M19.452 7.5H4.547a.5.5 0 00-.5.545l1.287 14.136A2 2 0 007.326 24h9.347a2 2 0 001.992-1.819L19.95 8.045a.5.5 0 00-.129-.382.5.5 0 00-.369-.163zm-9.2 13a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zm5 0a.75.75 0 01-1.5 0v-9a.75.75 0 011.5 0zM22 4h-4.75a.25.25 0 01-.25-.25V2.5A2.5 2.5 0 0014.5 0h-5A2.5 2.5 0 007 2.5v1.25a.25.25 0 01-.25.25H2a1 1 0 000 2h20a1 1 0 000-2zM9 3.75V2.5a.5.5 0 01.5-.5h5a.5.5 0 01.5.5v1.25a.25.25 0 01-.25.25h-5.5A.25.25 0 019 3.75z\" }) })\n});\n\nexport { DeleteIcon };\n","'use client';\nimport { createContext } from '@chakra-ui/utils/context';\n\nconst [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\nexport { CheckboxGroupProvider, useCheckboxGroupContext };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { chakra } from '../system/factory.mjs';\n\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 12 10\",\n      style: {\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16\n      },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"polyline\", { points: \"1.5 6 4.5 9 10.5 1\" })\n    }\n  );\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 24 24\",\n      style: { stroke: \"currentColor\", strokeWidth: 4 },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"line\", { x1: \"21\", x2: \"3\", y1: \"12\", y2: \"12\" })\n    }\n  );\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return isChecked || isIndeterminate ? /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      children: /* @__PURE__ */ jsx(BaseIcon, { ...rest })\n    }\n  ) : null;\n}\n\nexport { CheckboxIcon };\n","'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { callAll, compact, cx } from '@chakra-ui/utils';\nimport { keyframes } from '@emotion/react';\nimport { useMemo, cloneElement } from 'react';\nimport { useCheckboxGroupContext } from './checkbox-context.mjs';\nimport { CheckboxIcon } from './checkbox-icon.mjs';\nimport { useCheckbox } from './use-checkbox.mjs';\nimport { useInitialAnimationState } from './use-initial-animation-state.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nconst rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nconst checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nconst indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nconst indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nconst Checkbox = forwardRef(\n  function Checkbox2(props, ref) {\n    const group = useCheckboxGroupContext();\n    const mergedProps = { ...group, ...props };\n    const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n    const ownProps = omitThemingProps(props);\n    const {\n      spacing = \"0.5rem\",\n      className,\n      children,\n      iconColor,\n      iconSize,\n      icon = /* @__PURE__ */ jsx(CheckboxIcon, {}),\n      isChecked: isCheckedProp,\n      isDisabled = group?.isDisabled,\n      onChange: onChangeProp,\n      inputProps,\n      ...rest\n    } = ownProps;\n    let isChecked = isCheckedProp;\n    if (group?.value && ownProps.value) {\n      isChecked = group.value.includes(ownProps.value);\n    }\n    let onChange = onChangeProp;\n    if (group?.onChange && ownProps.value) {\n      onChange = callAll(group.onChange, onChangeProp);\n    }\n    const {\n      state,\n      getInputProps,\n      getCheckboxProps,\n      getLabelProps,\n      getRootProps\n    } = useCheckbox({\n      ...rest,\n      isDisabled,\n      isChecked,\n      onChange\n    });\n    const shouldAnimate = useInitialAnimationState(state.isChecked);\n    const iconStyles = useMemo(\n      () => ({\n        animation: !shouldAnimate ? void 0 : state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n        ...styles.icon,\n        ...compact({\n          fontSize: iconSize,\n          color: iconColor\n        })\n      }),\n      [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon]\n    );\n    const clonedIcon = cloneElement(icon, {\n      __css: iconStyles,\n      isIndeterminate: state.isIndeterminate,\n      isChecked: state.isChecked\n    });\n    return /* @__PURE__ */ jsxs(\n      chakra.label,\n      {\n        __css: { ...rootStyles, ...styles.container },\n        className: cx(\"chakra-checkbox\", className),\n        ...getRootProps(),\n        children: [\n          /* @__PURE__ */ jsx(\n            \"input\",\n            {\n              className: \"chakra-checkbox__input\",\n              ...getInputProps(inputProps, ref)\n            }\n          ),\n          /* @__PURE__ */ jsx(\n            chakra.span,\n            {\n              __css: { ...controlStyles, ...styles.control },\n              className: \"chakra-checkbox__control\",\n              ...getCheckboxProps(),\n              children: clonedIcon\n            }\n          ),\n          children && /* @__PURE__ */ jsx(\n            chakra.span,\n            {\n              className: \"chakra-checkbox__label\",\n              ...getLabelProps(),\n              __css: {\n                marginStart: spacing,\n                ...styles.label\n              },\n              children\n            }\n          )\n        ]\n      }\n    );\n  }\n);\nCheckbox.displayName = \"Checkbox\";\n\nexport { Checkbox };\n","'use client';\nimport { useState } from 'react';\n\nfunction useInitialAnimationState(isChecked) {\n  const [previousIsChecked, setPreviousIsChecked] = useState(isChecked);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true);\n    setPreviousIsChecked(isChecked);\n  }\n  return shouldAnimate;\n}\n\nexport { useInitialAnimationState };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { compact, mapResponsive } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nconst GridItem = forwardRef(\n  function GridItem2(props, ref) {\n    const {\n      area,\n      colSpan,\n      colStart,\n      colEnd,\n      rowEnd,\n      rowSpan,\n      rowStart,\n      ...rest\n    } = props;\n    const styles = compact({\n      gridArea: area,\n      gridColumn: spanFn(colSpan),\n      gridRow: spanFn(rowSpan),\n      gridColumnStart: colStart,\n      gridColumnEnd: colEnd,\n      gridRowStart: rowStart,\n      gridRowEnd: rowEnd\n    });\n    return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n  }\n);\nGridItem.displayName = \"GridItem\";\n\nexport { GridItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport { Grid };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { omit, cx } from '@chakra-ui/utils';\nimport { useFormControl } from '../form-control/use-form-control.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nconst Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ jsx(\n    chakra.textarea,\n    {\n      ref,\n      rows,\n      ...textareaProps,\n      className: cx(\"chakra-textarea\", className),\n      __css: textareaStyles\n    }\n  );\n});\nTextarea.displayName = \"Textarea\";\n\nexport { Textarea };\n"],"names":["props","variant","children","rest","styles","useStyleConfig","_jsx","Box","__css","height","_ref","targetNumber","count","setCount","useState","useEffect","interval","setInterval","prevCount","clearInterval","gotoPage","gopageValue","setGopageValue","pageCount","canPreviousPage","previousPage","canNextPage","pageOptions","setPageSize","nextPage","pageSize","pageIndex","_jsxs","Flex","justifyContent","mt","alignItems","length","Tooltip","label","IconButton","onClick","isDisabled","icon","ArrowLeftIcon","h","w","mr","pre","ChevronLeftIcon","_Fragment","Text","flexShrink","fontWeight","as","NumberInput","ml","min","max","value","onChange","defaultValue","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","Select","e","Number","target","map","ChevronRightIcon","ArrowRightIcon","Spinner","className","contactSchema","yup","firstName","required","lastName","title","email","phoneNumber","mobileNumber","notRequired","physicalAddress","mailingAddress","preferredContactMethod","leadSource","referralSource","campaignSource","leadStatus","leadRating","leadConversionProbability","emailHistory","phoneCallHistory","meetingHistory","notesandComments","tagsOrLabelsForcategorizingcontacts","birthday","anniversary","keyMilestones","dob","gender","occupation","interestsOrHobbies","communicationFrequency","preferences","linkedInProfile","facebookProfile","twitterHandle","otherProfiles","agentOrTeamMember","internalNotesOrComments","createBy","currentYear","Date","getFullYear","propertySchema","propertyType","propertyAddress","listingPrice","squareFootage","numberofBedrooms","numberofBathrooms","yearBuilt","propertyDescription","lotSize","parkingAvailability","appliancesIncluded","heatingAndCoolingSystems","flooringType","exteriorFeatures","communityAmenities","propertyPhotos","virtualToursOrVideos","floorPlans","propertyDocuments","listingStatus","listingAgentOrTeam","listingDate","marketingDescription","multipleListingService","previousOwners","purchaseHistory","propertyTaxes","homeownersAssociation","mortgageInformation","sellers","buyers","propertyManagers","contractorsOrServiceProviders","leadSchema","leadName","leadEmail","leadPhoneNumber","leadAddress","leadSourceDetails","leadCampaign","leadSourceChannel","leadSourceMedium","leadSourceCampaign","leadSourceReferral","leadAssignedAgent","leadOwner","leadCommunicationPreferences","leadCreationDate","leadConversionDate","leadFollowUpDate","leadFollowUpStatus","leadScore","leadNurturingWorkflow","leadEngagementLevel","leadConversionRate","leadNurturingStage","leadNextAction","userSchema","matches","username","loginSchema","password","emailSchema","sender","recipient","cc","bcc","relatedToContact","relatedToLead","subject","message","createByLead","test","this","createError","path","documentSchema","shape","folderName","filename","phoneCallSchema","callDuration","callNotes","category","textMsgSchema","to","createFor","TaskSchema","description","notes","reminder","start","end","backgroundColor","borderColor","textColor","display","url","MeetingSchema","agenda","attendes","of","trim","attendesLead","location","related","dateTime","createdBy","onClose","isOpen","fetchData","user","JSON","parse","localStorage","getItem","isLoding","setIsLoding","contactModelOpen","setContactModel","leadModelOpen","setLeadModel","initialValues","_id","startDate","endDate","formik","useFormik","validationSchema","onSubmit","values","resetForm","AddData","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","async","postApi","status","console","log","id","lead","response","getApi","_response$data","_response$data$contac","_response$data2","_response$data2$conta","data","contact","_response$data3","_response$data3$lead","_response$data4","_response$data4$lead","fetchRecipientData","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","Grid","templateColumns","gap","GridItem","colSpan","base","FormLabel","ms","fontSize","mb","color","Input","onBlur","name","placeholder","md","type","Textarea","resize","ModalFooter","Button","rightIcon","BsFillSendFill","disabled","CheckTable","columnsData","useColorModeValue","columns","useMemo","selectedValues","setSelectedValues","deleteModel","setDelete","addEmailHistory","setAddEmailHistory","addPhoneCall","setAddPhoneCall","selectedId","setSelectedId","callSelectedId","setCallSelectedId","setData","result","role","tableInstance","useTable","initialState","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","state","Card","direction","px","overflowX","sm","lg","justify","align","lineHeight","CountUpComponent","DeleteIcon","Delete","method","overflowY","Table","Thead","headerGroup","index","_headerGroup$headers","_createElement","Tr","getHeaderGroupProps","key","headers","column","Th","getHeaderProps","isSortable","getSortByToggleProps","pe","render","isSorted","isSortedDesc","FaSortDown","FaSortUp","FaSort","Tbody","Td","width","textAlign","row","i","_row$cells","getRowProps","cells","cell","_cell$row","Header","Checkbox","colorScheme","isChecked","includes","event","handleCheckboxChange","checked","prevSelectedValues","filter","selectedValue","me","_cell$row2","_cell$row3","Link","sx","textDecoration","cursor","_cell$row4","_cell$row5","getCellProps","minW","Pagination","AddEmailHistory","AddPhoneCall","Index","setColumns","tableColumns","accessor","onOpen","useDisclosure","colStart","leftIcon","AddIcon","Add","size","fetchDataR","BsFillTelephoneFill","createIcon","d","displayName","CloseIcon","jsx","fill","CheckboxGroupProvider","useCheckboxGroupContext","createContext","strict","CheckIcon","chakra","svg","viewBox","style","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","x1","x2","y1","y2","CheckboxIcon","isIndeterminate","BaseIcon","div","controlStyles","verticalAlign","userSelect","rootStyles","position","checkAnim","keyframes","from","opacity","strokeDashoffset","transform","indeterminateOpacityAnim","indeterminateScaleAnim","forwardRef","ref","group","mergedProps","useMultiStyleConfig","ownProps","omitThemingProps","spacing","iconColor","iconSize","isCheckedProp","onChangeProp","inputProps","callAll","getInputProps","getCheckboxProps","getLabelProps","getRootProps","useCheckbox","shouldAnimate","previousIsChecked","setPreviousIsChecked","setShouldAnimate","useInitialAnimationState","iconStyles","animation","compact","clonedIcon","cloneElement","jsxs","container","cx","span","control","marginStart","spanFn","mapResponsive","area","colEnd","rowEnd","rowSpan","rowStart","gridArea","gridColumn","gridRow","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","templateAreas","rowGap","columnGap","autoFlow","autoRows","templateRows","autoColumns","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","omitted","rows","textareaProps","useFormControl","textareaStyles","omit","textarea"],"sourceRoot":""}