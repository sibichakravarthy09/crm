{"version":3,"file":"static/js/7310.5d119f96.chunk.js","mappings":"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","sources":["components/card/Card.js","components/countUpComponent/countUpComponent.js","components/pagination/Pagination.js","components/spinner/Spinner.js","schema/contactSchema.js","schema/propertySchema.js","schema/leadSchema.js","schema/userSchema.js","schema/loginSchema.js","schema/emailSchema.js","schema/document.js","schema/phoneCallSchema.js","schema/textMsgSchema.js","schema/taskSchema.js","schema/meetingSchema.js","views/admin/property/Add.js","views/admin/property/Delete.js","../node_modules/@chakra-ui/icons/dist/esm/Add.mjs","../node_modules/@chakra-ui/icons/dist/esm/Close.mjs","../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox-context.mjs","../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox-icon.mjs","../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox.mjs","../node_modules/@chakra-ui/react/dist/esm/checkbox/use-initial-animation-state.mjs","../node_modules/@chakra-ui/react/dist/esm/textarea/textarea.mjs"],"sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction Card(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"Card\", { variant });\r\n\r\n  return (\r\n    <Box __css={styles} height={'100%'} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction CountUpComponent({ targetNumber }) {\r\n    const [count, setCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            if (count < targetNumber) {\r\n                setCount(prevCount => prevCount + 1);\r\n            }\r\n        }, targetNumber > 500 ? 0 : 20); // Change the interval duration as needed (in milliseconds)\r\n\r\n        return () => {\r\n            clearInterval(interval);\r\n        };\r\n    }, [count, targetNumber]);\r\n\r\n    return <span>{typeof targetNumber === \"number\" ? count : targetNumber}</span>\r\n}\r\n\r\nexport default CountUpComponent;\r\n","import { ArrowLeftIcon, ArrowRightIcon, ChevronLeftIcon, ChevronRightIcon } from '@chakra-ui/icons';\r\nimport { Flex, IconButton, NumberDecrementStepper, NumberIncrementStepper, NumberInput, NumberInputField, NumberInputStepper, Select, Text, Tooltip } from '@chakra-ui/react';\r\nimport React from 'react'\r\nimport { useEffect } from 'react';\r\n\r\nconst Pagination = (props) => {\r\n    const { gotoPage, gopageValue, setGopageValue, pageCount, canPreviousPage, previousPage, canNextPage, pageOptions, setPageSize, nextPage, pageSize, pageIndex } = props\r\n\r\n    useEffect(() => {\r\n        setGopageValue(1)\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <Flex justifyContent=\"space-between\" mt={2} alignItems=\"center\">\r\n            {pageOptions?.length !== 1 && <Flex>\r\n                <Tooltip label=\"First Page\">\r\n                    <IconButton\r\n                        onClick={() => { gotoPage(0); setGopageValue(1) }}\r\n                        isDisabled={!canPreviousPage}\r\n                        icon={<ArrowLeftIcon h={3} w={3} />}\r\n                        mr={4}\r\n                    />\r\n                </Tooltip>\r\n                <Tooltip label=\"Previous Page\">\r\n                    <IconButton\r\n                        onClick={() => { previousPage(); setGopageValue((pre) => pre - 1) }}\r\n                        isDisabled={!canPreviousPage}\r\n                        icon={<ChevronLeftIcon h={6} w={6} />}\r\n                    />\r\n                </Tooltip>\r\n            </Flex>}\r\n\r\n            <Flex alignItems=\"center\">\r\n                {pageOptions?.length !== 1 && <>\r\n                    <Text flexShrink=\"0\" mr={8}>\r\n                        Page{\" \"}\r\n                        <Text fontWeight=\"bold\" as=\"span\">\r\n                            {pageIndex + 1}\r\n                        </Text>{\" \"}\r\n                        of{\" \"}\r\n                        <Text fontWeight=\"bold\" as=\"span\">\r\n                            {pageOptions?.length}\r\n                        </Text>\r\n                    </Text>\r\n                    <Text flexShrink=\"0\">Go to page:</Text>{\" \"}\r\n                    <NumberInput\r\n                        ml={2}\r\n                        mr={8}\r\n                        w={28}\r\n                        min={1}\r\n                        max={pageOptions?.length}\r\n                        value={gopageValue}\r\n                        onChange={(value) => {\r\n                            const page = value ? value - 1 : 0;\r\n                            gotoPage(page);\r\n                            setGopageValue(value)\r\n                        }}\r\n                        defaultValue={pageIndex + 1}\r\n                    >\r\n                        <NumberInputField />\r\n                        <NumberInputStepper>\r\n                            <NumberIncrementStepper />\r\n                            <NumberDecrementStepper />\r\n                        </NumberInputStepper>\r\n                    </NumberInput>\r\n                </>}\r\n                <Select\r\n                    w={32}\r\n                    value={pageSize}\r\n                    onChange={(e) => {\r\n                        setPageSize(Number(e.target.value));\r\n                    }}\r\n                >\r\n                    {[5, 10, 20, 30, 40, 50].map((pageSize) => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            Show {pageSize}\r\n                        </option>\r\n                    ))}\r\n                </Select>\r\n            </Flex>\r\n\r\n            {pageOptions?.length !== 1 &&\r\n                <Flex>\r\n                    <Tooltip label=\"Next Page\">\r\n                        <IconButton\r\n                            onClick={() => { nextPage(); setGopageValue((pre) => pre + 1) }}\r\n                            isDisabled={!canNextPage}\r\n                            icon={<ChevronRightIcon h={6} w={6} />}\r\n                        />\r\n                    </Tooltip>\r\n                    <Tooltip label=\"Last Page\">\r\n                        <IconButton\r\n                            onClick={() => { gotoPage(pageCount - 1); setGopageValue(pageCount) }}\r\n                            isDisabled={!canNextPage}\r\n                            icon={<ArrowRightIcon h={3} w={3} />}\r\n                            ml={4}\r\n                        />\r\n                    </Tooltip>\r\n                </Flex>}\r\n        </Flex>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import './style.css';\r\nconst Spinner = () => <div className=\"loader\"></div>;\r\n\r\nexport default Spinner;","import * as yup from 'yup'\r\n\r\nexport const contactSchema = yup.object({\r\n    // 1. Basic Information\r\n    firstName: yup.string().min(2).required('First Name is required'),\r\n    lastName: yup.string().min(2).required('Last Name is required'),\r\n    title: yup.string().required('Title is required'),\r\n    email: yup.string().email().required('Email is required'),\r\n    phoneNumber: yup.number().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required('Phonenumber is Required'),\r\n    mobileNumber: yup.number().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').notRequired(),\r\n    physicalAddress: yup.string().required('Physical address is required'),\r\n    mailingAddress: yup.string(),\r\n    preferredContactMethod: yup.string().required('Preferred contact method is required'),\r\n    // 2.Lead Source Information\r\n    leadSource: yup.string(),\r\n    referralSource: yup.string(),\r\n    campaignSource: yup.string(),\r\n    // 3. Status and Classifications\r\n    leadStatus: yup.string(),\r\n    leadRating: yup.number(),\r\n    leadConversionProbability: yup.string(),\r\n    // 5. History:\r\n    emailHistory: yup.string(),\r\n    phoneCallHistory: yup.string(),\r\n    meetingHistory: yup.string(),\r\n    notesandComments: yup.string(),\r\n    // 6. Tags or Categories\r\n    tagsOrLabelsForcategorizingcontacts: yup.string(),\r\n    // 7. Important Dates:\r\n    birthday: yup.date(),\r\n    anniversary: yup.date(),\r\n    keyMilestones: yup.string(),\r\n    // 8. Additional Personal Information\r\n    dob: yup.string(),\r\n    gender: yup.string(),\r\n    occupation: yup.string(),\r\n    interestsOrHobbies: yup.string(),\r\n    // 9. Preferred  Communication Preferences:\r\n    communicationFrequency: yup.string(),\r\n    preferences: yup.string(),\r\n    // 10. Social Media Profiles:\r\n    linkedInProfile: yup.string(),\r\n    facebookProfile: yup.string(),\r\n    twitterHandle: yup.string(),\r\n    otherProfiles: yup.string(),\r\n    // 11. Lead Assignment and Team Collaboration:\r\n    agentOrTeamMember: yup.string(),\r\n    internalNotesOrComments: yup.string(),\r\n    createBy: yup.string(),\r\n    // 12. Custom Fields:\r\n})","import * as yup from 'yup'\r\nconst currentYear = new Date().getFullYear()\r\n\r\nexport const propertySchema = yup.object({\r\n    // 1. basicPropertyInformation:\r\n    propertyType: yup.string().required(\"Property Type Is required\"),\r\n    propertyAddress: yup.string().required(\"Property Address Is required\"),\r\n    listingPrice: yup.string().required(\"Listing Price Is required\"),\r\n    squareFootage: yup.string().required(\"Square Footage Is required\"),\r\n    numberofBedrooms: yup.number().required(\"Number Of Bedrooms Is required\"),\r\n    numberofBathrooms: yup.number().required(\"Number Of Bathrooms Is required\"),\r\n    yearBuilt: yup.number().min(1000).max(currentYear).required(\"Year Built Is required\"),\r\n    propertyDescription: yup.string().required(\"Property Description Is required\"),\r\n    //2. Property Features and Amenities:\r\n    lotSize: yup.string(),\r\n    parkingAvailability: yup.string(),\r\n    appliancesIncluded: yup.string(),\r\n    heatingAndCoolingSystems: yup.string(),\r\n    flooringType: yup.string(),\r\n    exteriorFeatures: yup.string(),\r\n    communityAmenities: yup.string(),\r\n    //3. Media and Visuals:\r\n    propertyPhotos: yup.string(),\r\n    virtualToursOrVideos: yup.string(),\r\n    floorPlans: yup.string(),\r\n    propertyDocuments: yup.string(),\r\n    //4. Listing and Marketing Details:\r\n    listingStatus: yup.string(),\r\n    listingAgentOrTeam: yup.string(),\r\n    listingDate: yup.string(),\r\n    marketingDescription: yup.string(),\r\n    multipleListingService: yup.string(),\r\n    //5. Property History:\r\n    previousOwners: yup.number().min(0),\r\n    purchaseHistory: yup.string(),\r\n    //6. Financial Information:\r\n    propertyTaxes: yup.string(),\r\n    homeownersAssociation: yup.string(),\r\n    mortgageInformation: yup.string(),\r\n    //7. Contacts Associated with Property:\r\n    sellers: yup.string(),\r\n    buyers: yup.string(),\r\n    propertyManagers: yup.string(),\r\n    contractorsOrServiceProviders: yup.string(),\r\n    //8. Property Notes and Comments:\r\n    internalNotesOrComments: yup.string(),\r\n    //9. Custom Fields\r\n})","import * as yup from 'yup'\r\n\r\n\r\nexport const leadSchema = yup.object({\r\n    // Lead Information:\r\n    leadName: yup.string().required(\"Lead Name Is required\"),\r\n    leadEmail: yup.string().email().required(\"Lead Email Is required\"),\r\n    leadPhoneNumber: yup.string().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required(\"Lead Phone Number Is required\"),\r\n    leadAddress: yup.string().required(\"Lead Address Is required\"),\r\n    // Lead Source and Details:\r\n    leadSource: yup.string(),\r\n    leadStatus: yup.string(),\r\n    leadSourceDetails: yup.string(),\r\n    leadCampaign: yup.string(),\r\n    leadSourceChannel: yup.string(),\r\n    leadSourceMedium: yup.string(),\r\n    leadSourceCampaign: yup.string(),\r\n    leadSourceReferral: yup.string(),\r\n    // Lead Assignment and Ownership:\r\n    leadAssignedAgent: yup.string(),\r\n    leadOwner: yup.string(),\r\n    leadCommunicationPreferences: yup.string(),\r\n    // Lead Dates and Follow-up:\r\n    leadCreationDate: yup.date().required(\"Lead Creation Date Is required\"),\r\n    leadConversionDate: yup.date().required(\"Lead Conversion Date Is required\"),\r\n    leadFollowUpDate: yup.date().required(\"lead Follow Up Date  Is required\"),\r\n    leadFollowUpStatus: yup.string(),\r\n    // Lead Scoring and Nurturing:\r\n    leadScore: yup.number().required(\"Lead Score Is required\"),\r\n    leadNurturingWorkflow: yup.string(),\r\n    leadEngagementLevel: yup.string(),\r\n    leadConversionRate: yup.number().required(\"lead Conversion Rate Is required\"),\r\n    leadNurturingStage: yup.string(),\r\n    leadNextAction: yup.string(),\r\n})\r\n","import * as yup from 'yup'\r\n\r\nexport const userSchema = yup.object({\r\n    firstName: yup.string().required(\"First Name Is required\"),\r\n    lastName: yup.string(),\r\n    phoneNumber: yup.string().required(\"Phone Number Is required\").matches(/^\\d{10}$/, \"Phone Number must be exactly 10 digits\"),\r\n    username: yup.string().email().required(\"Email Is required\"),\r\n})","import * as yup from 'yup'\r\n\r\nexport const loginSchema = yup.object({\r\n    username: yup.string().email().required(\"Email Is required\"),\r\n    password: yup.string().required(\"Password Is required\")\r\n})","import * as yup from 'yup'\r\n\r\nexport const emailSchema = yup.object({\r\n    sender: yup.string().required(\"Sender Is required\"),\r\n    recipient: yup.string().email().required(\"Recipient Is required\"),\r\n    cc: yup.string().email(),\r\n    bcc: yup.string().email(),\r\n    relatedToContact: yup.string(),\r\n    relatedToLead: yup.string(),\r\n    subject: yup.string(),\r\n    message: yup.string(),\r\n    createBy: yup.string(),\r\n    createByLead: yup.string(),\r\n}).test('createBy-or-createByLead-required', 'Recipient Is required', function (value) {\r\n    if (!value.createBy && !value.createByLead) {\r\n        return this.createError({\r\n            path: 'createBy',\r\n            message: 'Recipient Is required',\r\n        });\r\n    }\r\n});\r\n","import * as yup from 'yup'\r\n\r\n\r\n// Define the yup schema for the main document\r\nexport const documentSchema = yup.object().shape({\r\n    folderName: yup.string().required('Folder Name is required'),\r\n    filename: yup.string().min(2, 'File Name Must Be At Least 2 Characters'),\r\n    createBy: yup.string().required()\r\n});\r\n\r\n","import * as yup from 'yup'\r\n\r\nexport const phoneCallSchema = yup.object({\r\n    sender: yup.string().required(\"Sender Is required\"),\r\n    // recipient: yup.number().min(99999999, 'Phone number is invalid length').max(999999999999, 'Phone number is invalid').required(\"Recipient Is required\"),\r\n    recipient: yup.number().required(\"Recipient Is required\"),\r\n    callDuration: yup.string(),\r\n    callNotes: yup.string(),\r\n    createBy: yup.string(),\r\n    createByLead: yup.string(),\r\n    category: yup.string()\r\n}).test('createBy-or-createByLead-required', 'Recipient Is required', function (value) {\r\n    if (!value.createBy && !value.createByLead) {\r\n        return this.createError({\r\n            path: 'createBy',\r\n            message: 'Recipient Is required',\r\n        });\r\n    }\r\n});\r\n","import * as yup from 'yup'\r\n\r\nexport const textMsgSchema = yup.object({\r\n    sender: yup.string().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required(\"Sender Is required\"),\r\n    to: yup.string().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required(\"To Is required\"),\r\n    message: yup.string(),\r\n    createFor: yup.string().required(\"Create By Is required\")\r\n})","import * as yup from 'yup'\r\n\r\nexport const TaskSchema = yup.object({\r\n    title: yup.string().required(\"Title Is required\"),\r\n    category: yup.string(),\r\n    description: yup.string(),\r\n    notes: yup.string(),\r\n    // assignmentTo: yup.string(),\r\n    // assignmentToLead: yup.string(),\r\n    reminder: yup.string(),\r\n    start: yup.string().required(\"Start Is required\"),\r\n    end: yup.string(),\r\n    backgroundColor: yup.string(),\r\n    borderColor: yup.string(),\r\n    textColor: yup.string(),\r\n    display: yup.string(),\r\n    url: yup.string(),\r\n    createBy: yup.string(),\r\n})","import * as yup from 'yup'\r\n\r\nexport const MeetingSchema = yup.object({\r\n    agenda: yup.string().required(\"Agenda Is required\"),\r\n    attendes: yup.array().of(yup.string().trim()),\r\n    attendesLead: yup.array().of(yup.string().trim()),\r\n    location: yup.string(),\r\n    related: yup.string(),\r\n    dateTime: yup.string().required(\"Date Time Is required\"),\r\n    notes: yup.string(),\r\n    createFor: yup.string(),\r\n    createdBy: yup.string(),\r\n})","import { CloseIcon } from '@chakra-ui/icons';\r\nimport { Button, Drawer, DrawerBody, DrawerContent, DrawerFooter, DrawerHeader, DrawerOverlay, FormLabel, Grid, GridItem, Heading, IconButton, Input, Select, Text, Textarea } from '@chakra-ui/react';\r\nimport { HSeparator } from 'components/separator/Separator';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport { useFormik } from 'formik';\r\nimport { useState } from 'react';\r\nimport { propertySchema } from 'schema';\r\nimport { postApi } from 'services/api';\r\n\r\nconst Add = (props) => {\r\n    const [isLoding, setIsLoding] = useState(false)\r\n\r\n    const initialValues = {\r\n        //1. basicPropertyInformation:\r\n        propertyType: \"\",\r\n        propertyAddress: \"\",\r\n        listingPrice: \"\",\r\n        squareFootage: \"\",\r\n        numberofBedrooms: \"\",\r\n        numberofBathrooms: \"\",\r\n        yearBuilt: \"\",\r\n        propertyDescription: \"\",\r\n        //2. Property Features and Amenities:\r\n        lotSize: \"\",\r\n        parkingAvailability: \"\",\r\n        appliancesIncluded: \"\",\r\n        heatingAndCoolingSystems: \"\",\r\n        flooringType: \"\",\r\n        exteriorFeatures: \"\",\r\n        communityAmenities: \"\",\r\n        //3. Media and Visuals:\r\n        propertyPhotos: \"\",\r\n        virtualToursOrVideos: \"\",\r\n        floorPlans: \"\",\r\n        propertyDocuments: \"\",\r\n        //4. Listing and Marketing Details:\r\n        listingStatus: \"\",\r\n        listingAgentOrTeam: \"\",\r\n        listingDate: \"\",\r\n        marketingDescription: \"\",\r\n        multipleListingService: \"\",\r\n        //5. Property History:\r\n        previousOwners: \"\",\r\n        purchaseHistory: \"\",\r\n        //6. Financial Information:\r\n        propertyTaxes: \"\",\r\n        homeownersAssociation: \"\",\r\n        mortgageInformation: \"\",\r\n        //7. Contacts Associated with Property:\r\n        sellers: \"\",\r\n        buyers: \"\",\r\n        propertyManagers: \"\",\r\n        contractorsOrServiceProviders: \"\",\r\n        //8. Property Notes and Comments:\r\n        internalNotesOrComments: \"\",\r\n        createBy: JSON.parse(localStorage.getItem('user'))._id,\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: initialValues,\r\n        validationSchema: propertySchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            AddData();\r\n        },\r\n    });\r\n\r\n    const { errors, touched, values, handleBlur, handleChange, handleSubmit, setFieldValue, } = formik\r\n\r\n    const AddData = async () => {\r\n        try {\r\n            setIsLoding(true)\r\n            let response = await postApi('api/property/add', values)\r\n            if (response.status === 200) {\r\n                props.onClose();\r\n                formik.resetForm();\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        finally {\r\n            setIsLoding(false)\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        formik.resetForm();\r\n        props.onClose()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Drawer isOpen={props.isOpen} size={props.size}>\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerHeader justifyContent='space-between' display='flex' >\r\n                        Add Property\r\n                        <IconButton onClick={props.onClose} icon={<CloseIcon />} />\r\n                    </DrawerHeader>\r\n                    <DrawerBody>\r\n\r\n                        <Grid templateColumns=\"repeat(12, 1fr)\" gap={3}>\r\n\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <Heading as=\"h1\" size=\"md\" >\r\n                                    1. Basic Property Information\r\n                                </Heading>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Property Type<Text color={\"red\"}>*</Text>\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.propertyType}\r\n                                    name=\"propertyType\"\r\n                                    placeholder='Enter Property Type'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.propertyType && touched.propertyType ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.propertyType && touched.propertyType && errors.propertyType}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Year Built<Text color={\"red\"}>*</Text>\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.yearBuilt}\r\n                                    name=\"yearBuilt\"\r\n                                    type='number'\r\n                                    min={1000}\r\n                                    max={new Date().getFullYear()}\r\n                                    placeholder='Enter Year'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.yearBuilt && touched.yearBuilt ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.yearBuilt && touched.yearBuilt && errors.yearBuilt}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Property Address<Text color={\"red\"}>*</Text>\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.propertyAddress}\r\n                                    name=\"propertyAddress\"\r\n                                    placeholder='Enter Property Address'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.propertyAddress && touched.propertyAddress ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.propertyAddress && touched.propertyAddress && errors.propertyAddress}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Listing Price<Text color={\"red\"}>*</Text>\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.listingPrice}\r\n                                    name=\"listingPrice\"\r\n                                    placeholder='Enter Listing Price'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.listingPrice && touched.listingPrice ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.listingPrice && touched.listingPrice && errors.listingPrice}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Square Footage<Text color={\"red\"}>*</Text>\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.squareFootage}\r\n                                    name=\"squareFootage\"\r\n                                    placeholder='Enter Square Footage'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.squareFootage && touched.squareFootage ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.squareFootage && touched.squareFootage && errors.squareFootage}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Number of Bedrooms<Text color={\"red\"}>*</Text>\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.numberofBedrooms}\r\n                                    type='number'\r\n                                    min={0}\r\n                                    name=\"numberofBedrooms\"\r\n                                    placeholder='Enter Number of Bedrooms'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.numberofBedrooms && touched.numberofBedrooms ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.numberofBedrooms && touched.numberofBedrooms && errors.numberofBedrooms}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Number of Bathrooms<Text color={\"red\"}>*</Text>\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.numberofBathrooms}\r\n                                    name=\"numberofBathrooms\"\r\n                                    type='number'\r\n                                    min={0}\r\n                                    placeholder='Enter Number of Bathrooms'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.numberofBathrooms && touched.numberofBathrooms ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.numberofBathrooms && touched.numberofBathrooms && errors.numberofBathrooms}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Property Description<Text color={\"red\"}>*</Text>\r\n                                </FormLabel>\r\n                                <Textarea\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    resize={'none'}\r\n                                    value={values.propertyDescription}\r\n                                    name=\"propertyDescription\"\r\n                                    placeholder='Enter Property Description'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.propertyDescription && touched.propertyDescription ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.propertyDescription && touched.propertyDescription && errors.propertyDescription}</Text>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <HSeparator />\r\n                                <Heading mt={2} as=\"h1\" size=\"md\" >\r\n                                    2. Property Features and Amenities\r\n                                </Heading>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Lot Size\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.lotSize}\r\n                                    name=\"lotSize\"\r\n                                    placeholder='Enter Lot Size'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.lotSize && touched.lotSize ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.lotSize && touched.lotSize && errors.lotSize}</Text>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    appliances Included\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.appliancesIncluded}\r\n                                    name=\"appliancesIncluded\"\r\n                                    placeholder='Enter appliances Included'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.appliancesIncluded && touched.appliancesIncluded ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.appliancesIncluded && touched.appliancesIncluded && errors.appliancesIncluded}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Heating And Cooling Systems\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.heatingAndCoolingSystems}\r\n                                    name=\"heatingAndCoolingSystems\"\r\n                                    placeholder='Enter Heating And Cooling Systems'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.heatingAndCoolingSystems && touched.heatingAndCoolingSystems ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.heatingAndCoolingSystems && touched.heatingAndCoolingSystems && errors.heatingAndCoolingSystems}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Flooring Type\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.flooringType}\r\n                                    name=\"flooringType\"\r\n                                    placeholder='Enter Flooring Type'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.flooringType && touched.flooringType ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.flooringType && touched.flooringType && errors.flooringType}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Exterior Features\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.exteriorFeatures}\r\n                                    name=\"exteriorFeatures\"\r\n                                    placeholder='Enter Exterior Features'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.exteriorFeatures && touched.exteriorFeatures ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.exteriorFeatures && touched.exteriorFeatures && errors.exteriorFeatures}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Community Amenities\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.communityAmenities}\r\n                                    name=\"communityAmenities\"\r\n                                    placeholder='Enter Community Amenities'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.communityAmenities && touched.communityAmenities ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.communityAmenities && touched.communityAmenities && errors.communityAmenities}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Parking Availability\r\n                                </FormLabel>\r\n                                <Select\r\n                                    value={values.parkingAvailability}\r\n                                    name=\"parkingAvailability\"\r\n                                    onChange={handleChange}\r\n                                    fontWeight='500'\r\n                                    placeholder={'Select Parking Availability'}\r\n                                    borderColor={errors.parkingAvailability && touched.parkingAvailability ? \"red.300\" : null}\r\n                                >\r\n                                    <option value='yes'>Yes</option>\r\n                                    <option value='no'>No</option>\r\n                                </Select>\r\n                                <Text mb='10px' color={'red'}>{errors.parkingAvailability && touched.parkingAvailability && errors.parkingAvailability}</Text>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <HSeparator />\r\n                                <Heading mt={2} as=\"h1\" size=\"md\" >\r\n                                    3. Listing and Marketing Details\r\n                                </Heading>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Listing Status\r\n                                </FormLabel>\r\n                                <Select\r\n                                    value={values.listingStatus}\r\n                                    name=\"listingStatus\"\r\n                                    onChange={handleChange}\r\n                                    fontWeight='500'\r\n                                    placeholder={'Select Listing Status'}\r\n                                    borderColor={errors.listingStatus && touched.listingStatus ? \"red.300\" : null}\r\n                                >\r\n                                    <option value='active'>active</option>\r\n                                    <option value='pending'>pending</option>\r\n                                    <option value='sold'>sold</option>\r\n                                </Select>\r\n                                <Text mb='10px' color={'red'}>{errors.listingStatus && touched.listingStatus && errors.listingStatus}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Listing Agent Or Team\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.listingAgentOrTeam}\r\n                                    name=\"listingAgentOrTeam\"\r\n                                    placeholder='Enter Listing Agent Or Team'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.listingAgentOrTeam && touched.listingAgentOrTeam ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.listingAgentOrTeam && touched.listingAgentOrTeam && errors.listingAgentOrTeam}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Listing Date\r\n                                </FormLabel>\r\n                                <Input\r\n                                    type='date'\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.listingDate}\r\n                                    name=\"listingDate\"\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.listingDate && touched.listingDate ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.listingDate && touched.listingDate && errors.listingDate}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Marketing Description\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.marketingDescription}\r\n                                    name=\"marketingDescription\"\r\n                                    placeholder='Enter Marketing Description'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.marketingDescription && touched.marketingDescription ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.marketingDescription && touched.marketingDescription && errors.marketingDescription}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Multiple Listing Service\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.multipleListingService}\r\n                                    name=\"multipleListingService\"\r\n                                    placeholder='Enter Multiple Listing Service'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.multipleListingService && touched.multipleListingService ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.multipleListingService && touched.multipleListingService && errors.multipleListingService}</Text>\r\n                            </GridItem>\r\n\r\n\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <HSeparator />\r\n                                <Heading mt={2} as=\"h1\" size=\"md\" >\r\n                                    4. Property History\r\n                                </Heading>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Previous Owners\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.previousOwners}\r\n                                    name=\"previousOwners\"\r\n                                    type='number'\r\n                                    min={0}\r\n                                    placeholder='Enter Previous Owners'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.previousOwners && touched.previousOwners ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}>{errors.previousOwners && touched.previousOwners && errors.previousOwners}</Text>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <HSeparator />\r\n                                <Heading mt={2} as=\"h1\" size=\"md\" >\r\n                                    5. Financial Information\r\n                                </Heading>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Property Taxes\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.propertyTaxes}\r\n                                    name=\"propertyTaxes\"\r\n                                    placeholder=' Property Taxes'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.propertyTaxes && touched.propertyTaxes ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.propertyTaxes && touched.propertyTaxes && errors.propertyTaxes}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Homeowners Association\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.homeownersAssociation}\r\n                                    name=\"homeownersAssociation\"\r\n                                    placeholder='Homeowners Association'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.homeownersAssociation && touched.homeownersAssociation ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.homeownersAssociation && touched.homeownersAssociation && errors.homeownersAssociation}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Mortgage Information\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.mortgageInformation}\r\n                                    name=\"mortgageInformation\"\r\n                                    placeholder='Mortgage Information'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.mortgageInformation && touched.mortgageInformation ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.mortgageInformation && touched.mortgageInformation && errors.mortgageInformation}</Text>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <HSeparator />\r\n                                <Heading mt={2} as=\"h1\" size=\"md\" >\r\n                                    6. Contacts Associated with Property\r\n                                </Heading>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Sellers\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.sellers}\r\n                                    name=\"sellers\"\r\n                                    placeholder='Sellers'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.sellers && touched.sellers ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.sellers && touched.sellers && errors.sellers}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Buyers\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.buyers}\r\n                                    name=\"buyers\"\r\n                                    placeholder='Buyers'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.buyers && touched.buyers ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.buyers && touched.buyers && errors.buyers}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Property Managers\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.propertyManagers}\r\n                                    name=\"propertyManagers\"\r\n                                    placeholder='Property Managers'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.propertyManagers && touched.propertyManagers ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.propertyManagers && touched.propertyManagers && errors.propertyManagers}</Text>\r\n                            </GridItem>\r\n                            <GridItem colSpan={{ base: 12, sm: 6 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Contractors Or Service Providers\r\n                                </FormLabel>\r\n                                <Input\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    value={values.contractorsOrServiceProviders}\r\n                                    name=\"contractorsOrServiceProviders\"\r\n                                    placeholder='Contractors Or Service Providers'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.contractorsOrServiceProviders && touched.contractorsOrServiceProviders ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.contractorsOrServiceProviders && touched.contractorsOrServiceProviders && errors.contractorsOrServiceProviders}</Text>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <HSeparator />\r\n                                <Heading mt={2} as=\"h1\" size=\"md\" >\r\n                                    7. Property Notes and Comments\r\n                                </Heading>\r\n                            </GridItem>\r\n\r\n                            <GridItem colSpan={{ base: 12 }}>\r\n                                <FormLabel display='flex' ms='4px' fontSize='sm' fontWeight='500' mb='8px'>\r\n                                    Internal Notes Or Comments\r\n                                </FormLabel>\r\n                                <Textarea\r\n                                    fontSize='sm'\r\n                                    onChange={handleChange} onBlur={handleBlur}\r\n                                    resize={'none'}\r\n                                    value={values.internalNotesOrComments}\r\n                                    name=\"internalNotesOrComments\"\r\n                                    placeholder='Internal Notes Or Comments'\r\n                                    fontWeight='500'\r\n                                    borderColor={errors.internalNotesOrComments && touched.internalNotesOrComments ? \"red.300\" : null}\r\n                                />\r\n                                <Text mb='10px' color={'red'}> {errors.internalNotesOrComments && touched.internalNotesOrComments && errors.internalNotesOrComments}</Text>\r\n                            </GridItem>\r\n\r\n\r\n                        </Grid>\r\n                    </DrawerBody>\r\n\r\n\r\n                    <DrawerFooter>\r\n                        <Button sx={{ textTransform: \"capitalize\" }} disabled={isLoding ? true : false} variant=\"brand\" type=\"submit\" onClick={handleSubmit}                        >\r\n                            {isLoding ? <Spinner /> : 'Add Data'}\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"outline\"\r\n                            colorScheme='red'\r\n                            sx={{\r\n                                marginLeft: 2,\r\n                                textTransform: \"capitalize\",\r\n                            }}\r\n                            onClick={props.onClose}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </DrawerFooter>\r\n\r\n                </DrawerContent>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add\r\n","import { Button, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay } from '@chakra-ui/react';\r\nimport Spinner from 'components/spinner/Spinner';\r\nimport { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { deleteApi, deleteManyApi } from 'services/api';\r\n\r\nconst Delete = (props) => {\r\n    const [isLoding, setIsLoding] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n    const handleDeleteClick = async () => {\r\n        if (props.method === 'one') {\r\n            try {\r\n                setIsLoding(true)\r\n                const response = await deleteApi(props.url, props.id)\r\n                if (response.status === 200) {\r\n                    navigate('/properties')\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            finally {\r\n                setIsLoding(false)\r\n            }\r\n        } else if (props.method === 'many') {\r\n            try {\r\n                setIsLoding(true)\r\n                let response = await deleteManyApi(props.url, props.data)\r\n                if (response.status === 200) {\r\n                    props.setSelectedValues([])\r\n                    props.onClose(false)\r\n                }\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            finally {\r\n                setIsLoding(false)\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleClose = () => {\r\n        props.onClose(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Modal onClose={props.onClose} isOpen={props.isOpen} isCentered>\r\n                <ModalOverlay />\r\n                <ModalContent>\r\n                    <ModalHeader>Delete {props.method === 'one' ? 'Property' : 'properties'}</ModalHeader>\r\n                    <ModalCloseButton />\r\n                    <ModalBody>\r\n                        Are You Sure To Delete selated {props.method === 'one' ? 'Property' : 'properties'} ?\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button colorScheme=\"red\" mr={2} onClick={handleDeleteClick} disabled={isLoding ? true : false} >{isLoding ? <Spinner /> : 'Yes'}</Button>\r\n                        <Button variant=\"outline\" onClick={handleClose}>No</Button>\r\n                    </ModalFooter>\r\n                </ModalContent>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Delete\r\n","import { createIcon } from '@chakra-ui/react';\n\nconst AddIcon = createIcon({\n  d: \"M0,12a1.5,1.5,0,0,0,1.5,1.5h8.75a.25.25,0,0,1,.25.25V22.5a1.5,1.5,0,0,0,3,0V13.75a.25.25,0,0,1,.25-.25H22.5a1.5,1.5,0,0,0,0-3H13.75a.25.25,0,0,1-.25-.25V1.5a1.5,1.5,0,0,0-3,0v8.75a.25.25,0,0,1-.25.25H1.5A1.5,1.5,0,0,0,0,12Z\",\n  displayName: \"AddIcon\"\n});\n\nexport { AddIcon };\n","import { createIcon } from '@chakra-ui/react';\n\nconst CloseIcon = createIcon({\n  displayName: \"CloseIcon\",\n  d: \"M.439,21.44a1.5,1.5,0,0,0,2.122,2.121L11.823,14.3a.25.25,0,0,1,.354,0l9.262,9.263a1.5,1.5,0,1,0,2.122-2.121L14.3,12.177a.25.25,0,0,1,0-.354l9.263-9.262A1.5,1.5,0,0,0,21.439.44L12.177,9.7a.25.25,0,0,1-.354,0L2.561.44A1.5,1.5,0,0,0,.439,2.561L9.7,11.823a.25.25,0,0,1,0,.354Z\"\n});\n\nexport { CloseIcon };\n","'use client';\nimport { createContext } from '@chakra-ui/utils/context';\n\nconst [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\nexport { CheckboxGroupProvider, useCheckboxGroupContext };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { chakra } from '../system/factory.mjs';\n\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 12 10\",\n      style: {\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16\n      },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"polyline\", { points: \"1.5 6 4.5 9 10.5 1\" })\n    }\n  );\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 24 24\",\n      style: { stroke: \"currentColor\", strokeWidth: 4 },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"line\", { x1: \"21\", x2: \"3\", y1: \"12\", y2: \"12\" })\n    }\n  );\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return isChecked || isIndeterminate ? /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      children: /* @__PURE__ */ jsx(BaseIcon, { ...rest })\n    }\n  ) : null;\n}\n\nexport { CheckboxIcon };\n","'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { callAll, compact, cx } from '@chakra-ui/utils';\nimport { keyframes } from '@emotion/react';\nimport { useMemo, cloneElement } from 'react';\nimport { useCheckboxGroupContext } from './checkbox-context.mjs';\nimport { CheckboxIcon } from './checkbox-icon.mjs';\nimport { useCheckbox } from './use-checkbox.mjs';\nimport { useInitialAnimationState } from './use-initial-animation-state.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nconst rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nconst checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nconst indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nconst indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nconst Checkbox = forwardRef(\n  function Checkbox2(props, ref) {\n    const group = useCheckboxGroupContext();\n    const mergedProps = { ...group, ...props };\n    const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n    const ownProps = omitThemingProps(props);\n    const {\n      spacing = \"0.5rem\",\n      className,\n      children,\n      iconColor,\n      iconSize,\n      icon = /* @__PURE__ */ jsx(CheckboxIcon, {}),\n      isChecked: isCheckedProp,\n      isDisabled = group?.isDisabled,\n      onChange: onChangeProp,\n      inputProps,\n      ...rest\n    } = ownProps;\n    let isChecked = isCheckedProp;\n    if (group?.value && ownProps.value) {\n      isChecked = group.value.includes(ownProps.value);\n    }\n    let onChange = onChangeProp;\n    if (group?.onChange && ownProps.value) {\n      onChange = callAll(group.onChange, onChangeProp);\n    }\n    const {\n      state,\n      getInputProps,\n      getCheckboxProps,\n      getLabelProps,\n      getRootProps\n    } = useCheckbox({\n      ...rest,\n      isDisabled,\n      isChecked,\n      onChange\n    });\n    const shouldAnimate = useInitialAnimationState(state.isChecked);\n    const iconStyles = useMemo(\n      () => ({\n        animation: !shouldAnimate ? void 0 : state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n        ...styles.icon,\n        ...compact({\n          fontSize: iconSize,\n          color: iconColor\n        })\n      }),\n      [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon]\n    );\n    const clonedIcon = cloneElement(icon, {\n      __css: iconStyles,\n      isIndeterminate: state.isIndeterminate,\n      isChecked: state.isChecked\n    });\n    return /* @__PURE__ */ jsxs(\n      chakra.label,\n      {\n        __css: { ...rootStyles, ...styles.container },\n        className: cx(\"chakra-checkbox\", className),\n        ...getRootProps(),\n        children: [\n          /* @__PURE__ */ jsx(\n            \"input\",\n            {\n              className: \"chakra-checkbox__input\",\n              ...getInputProps(inputProps, ref)\n            }\n          ),\n          /* @__PURE__ */ jsx(\n            chakra.span,\n            {\n              __css: { ...controlStyles, ...styles.control },\n              className: \"chakra-checkbox__control\",\n              ...getCheckboxProps(),\n              children: clonedIcon\n            }\n          ),\n          children && /* @__PURE__ */ jsx(\n            chakra.span,\n            {\n              className: \"chakra-checkbox__label\",\n              ...getLabelProps(),\n              __css: {\n                marginStart: spacing,\n                ...styles.label\n              },\n              children\n            }\n          )\n        ]\n      }\n    );\n  }\n);\nCheckbox.displayName = \"Checkbox\";\n\nexport { Checkbox };\n","'use client';\nimport { useState } from 'react';\n\nfunction useInitialAnimationState(isChecked) {\n  const [previousIsChecked, setPreviousIsChecked] = useState(isChecked);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true);\n    setPreviousIsChecked(isChecked);\n  }\n  return shouldAnimate;\n}\n\nexport { useInitialAnimationState };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { omit, cx } from '@chakra-ui/utils';\nimport { useFormControl } from '../form-control/use-form-control.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst omitted = [\"h\", \"minH\", \"height\", \"minHeight\"];\nconst Textarea = forwardRef((props, ref) => {\n  const styles = useStyleConfig(\"Textarea\", props);\n  const { className, rows, ...rest } = omitThemingProps(props);\n  const textareaProps = useFormControl(rest);\n  const textareaStyles = rows ? omit(styles, omitted) : styles;\n  return /* @__PURE__ */ jsx(\n    chakra.textarea,\n    {\n      ref,\n      rows,\n      ...textareaProps,\n      className: cx(\"chakra-textarea\", className),\n      __css: textareaStyles\n    }\n  );\n});\nTextarea.displayName = \"Textarea\";\n\nexport { Textarea };\n"],"names":["props","variant","children","rest","styles","useStyleConfig","_jsx","Box","__css","height","_ref","targetNumber","count","setCount","useState","useEffect","interval","setInterval","prevCount","clearInterval","gotoPage","gopageValue","setGopageValue","pageCount","canPreviousPage","previousPage","canNextPage","pageOptions","setPageSize","nextPage","pageSize","pageIndex","_jsxs","Flex","justifyContent","mt","alignItems","length","Tooltip","label","IconButton","onClick","isDisabled","icon","ArrowLeftIcon","h","w","mr","pre","ChevronLeftIcon","_Fragment","Text","flexShrink","fontWeight","as","NumberInput","ml","min","max","value","onChange","defaultValue","NumberInputField","NumberInputStepper","NumberIncrementStepper","NumberDecrementStepper","Select","e","Number","target","map","ChevronRightIcon","ArrowRightIcon","Spinner","className","contactSchema","yup","firstName","required","lastName","title","email","phoneNumber","mobileNumber","notRequired","physicalAddress","mailingAddress","preferredContactMethod","leadSource","referralSource","campaignSource","leadStatus","leadRating","leadConversionProbability","emailHistory","phoneCallHistory","meetingHistory","notesandComments","tagsOrLabelsForcategorizingcontacts","birthday","anniversary","keyMilestones","dob","gender","occupation","interestsOrHobbies","communicationFrequency","preferences","linkedInProfile","facebookProfile","twitterHandle","otherProfiles","agentOrTeamMember","internalNotesOrComments","createBy","currentYear","Date","getFullYear","propertySchema","propertyType","propertyAddress","listingPrice","squareFootage","numberofBedrooms","numberofBathrooms","yearBuilt","propertyDescription","lotSize","parkingAvailability","appliancesIncluded","heatingAndCoolingSystems","flooringType","exteriorFeatures","communityAmenities","propertyPhotos","virtualToursOrVideos","floorPlans","propertyDocuments","listingStatus","listingAgentOrTeam","listingDate","marketingDescription","multipleListingService","previousOwners","purchaseHistory","propertyTaxes","homeownersAssociation","mortgageInformation","sellers","buyers","propertyManagers","contractorsOrServiceProviders","leadSchema","leadName","leadEmail","leadPhoneNumber","leadAddress","leadSourceDetails","leadCampaign","leadSourceChannel","leadSourceMedium","leadSourceCampaign","leadSourceReferral","leadAssignedAgent","leadOwner","leadCommunicationPreferences","leadCreationDate","leadConversionDate","leadFollowUpDate","leadFollowUpStatus","leadScore","leadNurturingWorkflow","leadEngagementLevel","leadConversionRate","leadNurturingStage","leadNextAction","userSchema","matches","username","loginSchema","password","emailSchema","sender","recipient","cc","bcc","relatedToContact","relatedToLead","subject","message","createByLead","test","this","createError","path","documentSchema","shape","folderName","filename","phoneCallSchema","callDuration","callNotes","category","textMsgSchema","to","createFor","TaskSchema","description","notes","reminder","start","end","backgroundColor","borderColor","textColor","display","url","MeetingSchema","agenda","attendes","of","trim","attendesLead","location","related","dateTime","createdBy","isLoding","setIsLoding","initialValues","JSON","parse","localStorage","getItem","_id","formik","useFormik","validationSchema","onSubmit","values","resetForm","AddData","errors","touched","handleBlur","handleChange","handleSubmit","setFieldValue","async","postApi","status","onClose","console","log","Drawer","isOpen","size","DrawerOverlay","DrawerContent","DrawerHeader","CloseIcon","DrawerBody","Grid","templateColumns","gap","GridItem","colSpan","base","Heading","sm","FormLabel","ms","fontSize","mb","color","Input","onBlur","name","placeholder","type","Textarea","resize","HSeparator","DrawerFooter","Button","sx","textTransform","disabled","colorScheme","marginLeft","navigate","useNavigate","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","method","ModalCloseButton","ModalBody","ModalFooter","deleteApi","id","error","deleteManyApi","data","setSelectedValues","handleClose","AddIcon","createIcon","d","displayName","CheckboxGroupProvider","useCheckboxGroupContext","createContext","strict","CheckIcon","jsx","chakra","svg","width","viewBox","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","x1","x2","y1","y2","CheckboxIcon","isIndeterminate","isChecked","BaseIcon","div","controlStyles","verticalAlign","userSelect","rootStyles","cursor","position","checkAnim","keyframes","from","opacity","strokeDashoffset","transform","indeterminateOpacityAnim","indeterminateScaleAnim","Checkbox","forwardRef","ref","group","mergedProps","useMultiStyleConfig","ownProps","omitThemingProps","spacing","iconColor","iconSize","isCheckedProp","onChangeProp","inputProps","includes","callAll","state","getInputProps","getCheckboxProps","getLabelProps","getRootProps","useCheckbox","shouldAnimate","previousIsChecked","setPreviousIsChecked","setShouldAnimate","useInitialAnimationState","iconStyles","useMemo","animation","compact","clonedIcon","cloneElement","jsxs","container","cx","span","control","marginStart","omitted","rows","textareaProps","useFormControl","textareaStyles","omit","textarea"],"sourceRoot":""}