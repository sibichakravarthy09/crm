{"version":3,"file":"static/js/2958.3cda49f3.chunk.js","mappings":"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","sources":["components/card/Card.js","components/spinner/Spinner.js","views/admin/meeting/View.js","../node_modules/@chakra-ui/react/dist/esm/grid/grid-item.mjs","../node_modules/@chakra-ui/react/dist/esm/grid/grid.mjs"],"sourcesContent":["import { Box, useStyleConfig } from \"@chakra-ui/react\";\r\nfunction Card(props) {\r\n  const { variant, children, ...rest } = props;\r\n  const styles = useStyleConfig(\"Card\", { variant });\r\n\r\n  return (\r\n    <Box __css={styles} height={'100%'} {...rest}>\r\n      {children}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import './style.css';\r\nconst Spinner = () => <div className=\"loader\"></div>;\r\n\r\nexport default Spinner;","import { Box, Button, Flex, Grid, GridItem, Heading, Text, useDisclosure } from \"@chakra-ui/react\";\r\nimport Card from \"components/card/Card\";\r\nimport { HSeparator } from \"components/separator/Separator\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { getApi } from \"services/api\";\r\n\r\nconst View = () => {\r\n\r\n    const param = useParams()\r\n\r\n    const [data, setData] = useState()\r\n    const { isOpen, onOpen, onClose } = useDisclosure()\r\n    const [edit, setEdit] = useState(false);\r\n    const [deleteModel, setDelete] = useState(false);\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const size = \"lg\";\r\n    const [isLoding, setIsLoding] = useState(false)\r\n\r\n\r\n    const fetchData = async () => {\r\n        setIsLoding(true)\r\n        let response = await getApi('api/meeting/view/', param.id)\r\n        setData(response?.data);\r\n        setIsLoding(false)\r\n    }\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n\r\n            {isLoding ?\r\n                <Flex justifyContent={'center'} alignItems={'center'} width=\"100%\" >\r\n                    <Spinner />\r\n                </Flex> : <>\r\n\r\n                    <Grid templateColumns=\"repeat(4, 1fr)\" gap={3}>\r\n\r\n                        <GridItem colSpan={{ base: 4 }}>\r\n                            <Card >\r\n                                <Grid templateColumns={{ base: \"1fr\" }} gap={4}>\r\n                                    <GridItem colSpan={2}>\r\n                                        <Box>\r\n                                            <Heading size=\"md\" mb={3}>\r\n                                                Meeting View page\r\n                                            </Heading>\r\n                                            <HSeparator />\r\n                                        </Box>\r\n                                    </GridItem>\r\n                                    <Grid templateColumns={'repeat(2, 1fr)'} gap={4}>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Agenda </Text>\r\n                                            <Text>{data?.agenda ? data?.agenda : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Created By </Text>\r\n                                            <Text>{data?.createdByName ? data?.createdByName : ' - '}</Text>\r\n                                        </GridItem>\r\n\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> DateTime </Text>\r\n                                            <Text> {data?.dateTime ? moment(data?.dateTime).format('DD-MM-YYYY  h:mma ') : ' - '} [{data?.dateTime ? moment(data?.dateTime).toNow() : ' - '}]</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Timestamp </Text>\r\n                                            <Text> {data?.timestamp ? moment(data?.timestamp).format('DD-MM-YYYY  h:mma ') : ' - '} [{data?.timestamp ? moment(data?.timestamp).toNow() : ' - '}]</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Location </Text>\r\n                                            <Text>{data?.location ? data?.location : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}>  Notes </Text>\r\n                                            <Text>{data?.notes ? data?.notes : ' - '}</Text>\r\n                                        </GridItem>\r\n                                        <GridItem colSpan={{ base: 2, md: 1 }}>\r\n                                            <Text fontSize=\"sm\" fontWeight=\"bold\" color={'blackAlpha.900'}> Attendes </Text>\r\n                                            {data?.related === 'contact' ? data?.attendes && data?.attendes.map((item) => {\r\n                                                return (\r\n                                                    <Link to={user?.role !== 'admin' ? `/contactView/${item._id}` : `/admin/contactView/${item._id}`}>\r\n                                                        <Text color='green.400' sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{item.firstName + ' ' + item.lastName}</Text>\r\n                                                    </Link>\r\n                                                )\r\n                                            }) : data?.related === 'lead' ? data?.attendesLead && data?.attendesLead.map((item) => {\r\n                                                return (\r\n                                                    <Link to={user?.role !== 'admin' ? `/leadView/${item._id}` : `/admin/leadView/${item._id}`}>\r\n                                                        <Text color='green.400' sx={{ '&:hover': { color: 'blue.500', textDecoration: 'underline' } }}>{item.leadName}</Text>\r\n                                                    </Link>\r\n                                                )\r\n                                            }) : '-'}\r\n                                        </GridItem>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Card>\r\n                        </GridItem>\r\n\r\n                    </Grid>\r\n\r\n\r\n                </>}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default View;\r\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { compact, mapResponsive } from '@chakra-ui/utils';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nfunction spanFn(span) {\n  return mapResponsive(\n    span,\n    (value) => value === \"auto\" ? \"auto\" : `span ${value}/span ${value}`\n  );\n}\nconst GridItem = forwardRef(\n  function GridItem2(props, ref) {\n    const {\n      area,\n      colSpan,\n      colStart,\n      colEnd,\n      rowEnd,\n      rowSpan,\n      rowStart,\n      ...rest\n    } = props;\n    const styles = compact({\n      gridArea: area,\n      gridColumn: spanFn(colSpan),\n      gridRow: spanFn(rowSpan),\n      gridColumnStart: colStart,\n      gridColumnEnd: colEnd,\n      gridRowStart: rowStart,\n      gridRowEnd: rowEnd\n    });\n    return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n  }\n);\nGridItem.displayName = \"GridItem\";\n\nexport { GridItem };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport { Grid };\n"],"names":["props","variant","children","rest","styles","useStyleConfig","_jsx","Box","__css","height","Spinner","className","View","param","useParams","data","setData","useState","isOpen","onOpen","onClose","useDisclosure","edit","setEdit","deleteModel","setDelete","user","JSON","parse","localStorage","getItem","isLoding","setIsLoding","useEffect","async","response","getApi","id","fetchData","_Fragment","Flex","justifyContent","alignItems","width","Grid","templateColumns","gap","GridItem","colSpan","base","Card","_jsxs","Heading","size","mb","HSeparator","md","Text","fontSize","fontWeight","color","agenda","createdByName","dateTime","moment","format","toNow","timestamp","location","notes","related","attendes","map","item","Link","to","role","_id","sx","textDecoration","firstName","lastName","attendesLead","leadName","spanFn","span","mapResponsive","value","forwardRef","ref","area","colStart","colEnd","rowEnd","rowSpan","rowStart","compact","gridArea","gridColumn","gridRow","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","jsx","chakra","div","displayName","templateAreas","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns"],"sourceRoot":""}