{"version":3,"file":"static/js/9498.1d8d5bc0.chunk.js","mappings":"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","sources":["components/spinner/Spinner.js","schema/contactSchema.js","schema/propertySchema.js","schema/leadSchema.js","schema/userSchema.js","schema/loginSchema.js","schema/emailSchema.js","schema/document.js","schema/phoneCallSchema.js","schema/textMsgSchema.js","schema/taskSchema.js","schema/meetingSchema.js","../node_modules/@chakra-ui/react/dist/esm/form-control/form-error.mjs","components/footer/FooterAuth.js","layouts/auth/Default.js","views/auth/signIn/index.jsx","../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox-context.mjs","../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox-icon.mjs","../node_modules/@chakra-ui/react/dist/esm/checkbox/checkbox.mjs","../node_modules/@chakra-ui/react/dist/esm/checkbox/use-initial-animation-state.mjs"],"sourcesContent":["import './style.css';\r\nconst Spinner = () => <div className=\"loader\"></div>;\r\n\r\nexport default Spinner;","import * as yup from 'yup'\r\n\r\nexport const contactSchema = yup.object({\r\n    // 1. Basic Information\r\n    firstName: yup.string().min(2).required('First Name is required'),\r\n    lastName: yup.string().min(2).required('Last Name is required'),\r\n    title: yup.string().required('Title is required'),\r\n    email: yup.string().email().required('Email is required'),\r\n    phoneNumber: yup.number().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required('Phonenumber is Required'),\r\n    mobileNumber: yup.number().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').notRequired(),\r\n    physicalAddress: yup.string().required('Physical address is required'),\r\n    mailingAddress: yup.string(),\r\n    preferredContactMethod: yup.string().required('Preferred contact method is required'),\r\n    // 2.Lead Source Information\r\n    leadSource: yup.string(),\r\n    referralSource: yup.string(),\r\n    campaignSource: yup.string(),\r\n    // 3. Status and Classifications\r\n    leadStatus: yup.string(),\r\n    leadRating: yup.number(),\r\n    leadConversionProbability: yup.string(),\r\n    // 5. History:\r\n    emailHistory: yup.string(),\r\n    phoneCallHistory: yup.string(),\r\n    meetingHistory: yup.string(),\r\n    notesandComments: yup.string(),\r\n    // 6. Tags or Categories\r\n    tagsOrLabelsForcategorizingcontacts: yup.string(),\r\n    // 7. Important Dates:\r\n    birthday: yup.date(),\r\n    anniversary: yup.date(),\r\n    keyMilestones: yup.string(),\r\n    // 8. Additional Personal Information\r\n    dob: yup.string(),\r\n    gender: yup.string(),\r\n    occupation: yup.string(),\r\n    interestsOrHobbies: yup.string(),\r\n    // 9. Preferred  Communication Preferences:\r\n    communicationFrequency: yup.string(),\r\n    preferences: yup.string(),\r\n    // 10. Social Media Profiles:\r\n    linkedInProfile: yup.string(),\r\n    facebookProfile: yup.string(),\r\n    twitterHandle: yup.string(),\r\n    otherProfiles: yup.string(),\r\n    // 11. Lead Assignment and Team Collaboration:\r\n    agentOrTeamMember: yup.string(),\r\n    internalNotesOrComments: yup.string(),\r\n    createBy: yup.string(),\r\n    // 12. Custom Fields:\r\n})","import * as yup from 'yup'\r\nconst currentYear = new Date().getFullYear()\r\n\r\nexport const propertySchema = yup.object({\r\n    // 1. basicPropertyInformation:\r\n    propertyType: yup.string().required(\"Property Type Is required\"),\r\n    propertyAddress: yup.string().required(\"Property Address Is required\"),\r\n    listingPrice: yup.string().required(\"Listing Price Is required\"),\r\n    squareFootage: yup.string().required(\"Square Footage Is required\"),\r\n    numberofBedrooms: yup.number().required(\"Number Of Bedrooms Is required\"),\r\n    numberofBathrooms: yup.number().required(\"Number Of Bathrooms Is required\"),\r\n    yearBuilt: yup.number().min(1000).max(currentYear).required(\"Year Built Is required\"),\r\n    propertyDescription: yup.string().required(\"Property Description Is required\"),\r\n    //2. Property Features and Amenities:\r\n    lotSize: yup.string(),\r\n    parkingAvailability: yup.string(),\r\n    appliancesIncluded: yup.string(),\r\n    heatingAndCoolingSystems: yup.string(),\r\n    flooringType: yup.string(),\r\n    exteriorFeatures: yup.string(),\r\n    communityAmenities: yup.string(),\r\n    //3. Media and Visuals:\r\n    propertyPhotos: yup.string(),\r\n    virtualToursOrVideos: yup.string(),\r\n    floorPlans: yup.string(),\r\n    propertyDocuments: yup.string(),\r\n    //4. Listing and Marketing Details:\r\n    listingStatus: yup.string(),\r\n    listingAgentOrTeam: yup.string(),\r\n    listingDate: yup.string(),\r\n    marketingDescription: yup.string(),\r\n    multipleListingService: yup.string(),\r\n    //5. Property History:\r\n    previousOwners: yup.number().min(0),\r\n    purchaseHistory: yup.string(),\r\n    //6. Financial Information:\r\n    propertyTaxes: yup.string(),\r\n    homeownersAssociation: yup.string(),\r\n    mortgageInformation: yup.string(),\r\n    //7. Contacts Associated with Property:\r\n    sellers: yup.string(),\r\n    buyers: yup.string(),\r\n    propertyManagers: yup.string(),\r\n    contractorsOrServiceProviders: yup.string(),\r\n    //8. Property Notes and Comments:\r\n    internalNotesOrComments: yup.string(),\r\n    //9. Custom Fields\r\n})","import * as yup from 'yup'\r\n\r\n\r\nexport const leadSchema = yup.object({\r\n    // Lead Information:\r\n    leadName: yup.string().required(\"Lead Name Is required\"),\r\n    leadEmail: yup.string().email().required(\"Lead Email Is required\"),\r\n    leadPhoneNumber: yup.string().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required(\"Lead Phone Number Is required\"),\r\n    leadAddress: yup.string().required(\"Lead Address Is required\"),\r\n    // Lead Source and Details:\r\n    leadSource: yup.string(),\r\n    leadStatus: yup.string(),\r\n    leadSourceDetails: yup.string(),\r\n    leadCampaign: yup.string(),\r\n    leadSourceChannel: yup.string(),\r\n    leadSourceMedium: yup.string(),\r\n    leadSourceCampaign: yup.string(),\r\n    leadSourceReferral: yup.string(),\r\n    // Lead Assignment and Ownership:\r\n    leadAssignedAgent: yup.string(),\r\n    leadOwner: yup.string(),\r\n    leadCommunicationPreferences: yup.string(),\r\n    // Lead Dates and Follow-up:\r\n    leadCreationDate: yup.date().required(\"Lead Creation Date Is required\"),\r\n    leadConversionDate: yup.date().required(\"Lead Conversion Date Is required\"),\r\n    leadFollowUpDate: yup.date().required(\"lead Follow Up Date  Is required\"),\r\n    leadFollowUpStatus: yup.string(),\r\n    // Lead Scoring and Nurturing:\r\n    leadScore: yup.number().required(\"Lead Score Is required\"),\r\n    leadNurturingWorkflow: yup.string(),\r\n    leadEngagementLevel: yup.string(),\r\n    leadConversionRate: yup.number().required(\"lead Conversion Rate Is required\"),\r\n    leadNurturingStage: yup.string(),\r\n    leadNextAction: yup.string(),\r\n})\r\n","import * as yup from 'yup'\r\n\r\nexport const userSchema = yup.object({\r\n    firstName: yup.string().required(\"First Name Is required\"),\r\n    lastName: yup.string(),\r\n    phoneNumber: yup.string().required(\"Phone Number Is required\").matches(/^\\d{10}$/, \"Phone Number must be exactly 10 digits\"),\r\n    username: yup.string().email().required(\"Email Is required\"),\r\n})","import * as yup from 'yup'\r\n\r\nexport const loginSchema = yup.object({\r\n    username: yup.string().email().required(\"Email Is required\"),\r\n    password: yup.string().required(\"Password Is required\")\r\n})","import * as yup from 'yup'\r\n\r\nexport const emailSchema = yup.object({\r\n    sender: yup.string().required(\"Sender Is required\"),\r\n    recipient: yup.string().email().required(\"Recipient Is required\"),\r\n    cc: yup.string().email(),\r\n    bcc: yup.string().email(),\r\n    relatedToContact: yup.string(),\r\n    relatedToLead: yup.string(),\r\n    subject: yup.string(),\r\n    message: yup.string(),\r\n    createBy: yup.string(),\r\n    createByLead: yup.string(),\r\n}).test('createBy-or-createByLead-required', 'Recipient Is required', function (value) {\r\n    if (!value.createBy && !value.createByLead) {\r\n        return this.createError({\r\n            path: 'createBy',\r\n            message: 'Recipient Is required',\r\n        });\r\n    }\r\n});\r\n","import * as yup from 'yup'\r\n\r\n\r\n// Define the yup schema for the main document\r\nexport const documentSchema = yup.object().shape({\r\n    folderName: yup.string().required('Folder Name is required'),\r\n    filename: yup.string().min(2, 'File Name Must Be At Least 2 Characters'),\r\n    createBy: yup.string().required()\r\n});\r\n\r\n","import * as yup from 'yup'\r\n\r\nexport const phoneCallSchema = yup.object({\r\n    sender: yup.string().required(\"Sender Is required\"),\r\n    // recipient: yup.number().min(99999999, 'Phone number is invalid length').max(999999999999, 'Phone number is invalid').required(\"Recipient Is required\"),\r\n    recipient: yup.number().required(\"Recipient Is required\"),\r\n    callDuration: yup.string(),\r\n    callNotes: yup.string(),\r\n    createBy: yup.string(),\r\n    createByLead: yup.string(),\r\n    category: yup.string()\r\n}).test('createBy-or-createByLead-required', 'Recipient Is required', function (value) {\r\n    if (!value.createBy && !value.createByLead) {\r\n        return this.createError({\r\n            path: 'createBy',\r\n            message: 'Recipient Is required',\r\n        });\r\n    }\r\n});\r\n","import * as yup from 'yup'\r\n\r\nexport const textMsgSchema = yup.object({\r\n    sender: yup.string().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required(\"Sender Is required\"),\r\n    to: yup.string().min(1000000000, 'Phone number is invalid').max(999999999999, 'Phone number is invalid').required(\"To Is required\"),\r\n    message: yup.string(),\r\n    createFor: yup.string().required(\"Create By Is required\")\r\n})","import * as yup from 'yup'\r\n\r\nexport const TaskSchema = yup.object({\r\n    title: yup.string().required(\"Title Is required\"),\r\n    category: yup.string(),\r\n    description: yup.string(),\r\n    notes: yup.string(),\r\n    // assignmentTo: yup.string(),\r\n    // assignmentToLead: yup.string(),\r\n    reminder: yup.string(),\r\n    start: yup.string().required(\"Start Is required\"),\r\n    end: yup.string(),\r\n    backgroundColor: yup.string(),\r\n    borderColor: yup.string(),\r\n    textColor: yup.string(),\r\n    display: yup.string(),\r\n    url: yup.string(),\r\n    createBy: yup.string(),\r\n})","import * as yup from 'yup'\r\n\r\nexport const MeetingSchema = yup.object({\r\n    agenda: yup.string().required(\"Agenda Is required\"),\r\n    attendes: yup.array().of(yup.string().trim()),\r\n    attendesLead: yup.array().of(yup.string().trim()),\r\n    location: yup.string(),\r\n    related: yup.string(),\r\n    dateTime: yup.string().required(\"Date Time Is required\"),\r\n    notes: yup.string(),\r\n    createFor: yup.string(),\r\n    createdBy: yup.string(),\r\n})","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { createContext, cx } from '@chakra-ui/utils';\nimport { useFormControlContext } from './form-control.mjs';\nimport { Icon } from '../icon/icon.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst [FormErrorStylesProvider, useFormErrorStyles] = createContext({\n  name: `FormErrorStylesContext`,\n  errorMessage: `useFormErrorStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormError />\" `\n});\nconst FormErrorMessage = forwardRef(\n  (props, ref) => {\n    const styles = useMultiStyleConfig(\"FormError\", props);\n    const ownProps = omitThemingProps(props);\n    const field = useFormControlContext();\n    if (!field?.isInvalid)\n      return null;\n    return /* @__PURE__ */ jsx(FormErrorStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field?.getErrorMessageProps(ownProps, ref),\n        className: cx(\"chakra-form__error-message\", props.className),\n        __css: {\n          display: \"flex\",\n          alignItems: \"center\",\n          ...styles.text\n        }\n      }\n    ) });\n  }\n);\nFormErrorMessage.displayName = \"FormErrorMessage\";\nconst FormErrorIcon = forwardRef((props, ref) => {\n  const styles = useFormErrorStyles();\n  const field = useFormControlContext();\n  if (!field?.isInvalid)\n    return null;\n  const _className = cx(\"chakra-form__error-icon\", props.className);\n  return /* @__PURE__ */ jsx(\n    Icon,\n    {\n      ref,\n      \"aria-hidden\": true,\n      ...props,\n      __css: styles.icon,\n      className: _className,\n      children: /* @__PURE__ */ jsx(\n        \"path\",\n        {\n          fill: \"currentColor\",\n          d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n        }\n      )\n    }\n  );\n});\nFormErrorIcon.displayName = \"FormErrorIcon\";\n\nexport { FormErrorIcon, FormErrorMessage, useFormErrorStyles };\n","/*eslint-disable*/\r\nimport React from \"react\";\r\nimport {\r\n  Flex,\r\n  Link,\r\n  List,\r\n  ListItem,\r\n  Text,\r\n  useColorModeValue,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport default function Footer() {\r\n  let textColor = useColorModeValue(\"gray.400\", \"white\");\r\n  let linkColor = useColorModeValue({ base: \"gray.400\", lg: \"gray.400\" }, \"gray.400\");\r\n  return (\r\n    <Flex\r\n      zIndex='3'\r\n      flexDirection={{\r\n        base: \"column\",\r\n        lg: \"row\",\r\n      }}\r\n      alignItems={{\r\n        base: \"center\",\r\n        xl: \"start\",\r\n      }}\r\n      justifyContent='space-between'\r\n      px={{ base: \"30px\", md: \"0px\" }}\r\n      pb='30px'>\r\n\r\n      \r\n    </Flex>\r\n  );\r\n}\r\n","// Chakra imports\r\nimport { Box, Flex } from \"@chakra-ui/react\";\r\nimport Footer from \"components/footer/FooterAuth\";\r\nimport FixedPlugin from \"components/fixedPlugin/FixedPlugin\";\r\nimport { Link } from \"react-router-dom\";\r\n// Custom components\r\n// Assets\r\n\r\nfunction AuthIllustration(props) {\r\n  const { children, illustrationBackground } = props;\r\n  // Chakra color mode\r\n  return (\r\n    <Flex h='max-content'>\r\n\r\n      <Flex\r\n        h={{\r\n          sm: \"initial\",\r\n          md: \"unset\",\r\n          lg: \"100vh\",\r\n          xl: \"97vh\",\r\n        }}\r\n        w='100%'\r\n        maxW={{ md: \"66%\", lg: \"1313px\" }}\r\n        mx='auto'\r\n        pt={{ sm: \"50px\", md: \"0px\" }}\r\n        px={{ lg: \"30px\", xl: \"0px\" }}\r\n        ps={{ xl: \"70px\" }}\r\n        justifyContent='center'\r\n        direction='column'>\r\n        {children}\r\n        <Box\r\n          display={{ base: \"none\", md: \"flex\" }}\r\n          h='100%'\r\n          minH='100vh'\r\n          w={{ lg: \"50vw\", \"2xl\": \"44vw\" }}\r\n          borderBottomLeftRadius={{ lg: \"120px\", xl: \"200px\" }}\r\n          justifyContent='center'\r\n          position='absolute'\r\n          flexDirection={'column'}\r\n          alignItems={'center'}\r\n          // bg={'black'}\r\n          overflow={'hidden'}\r\n          right='0px'>\r\n\r\n        </Box>\r\n        <Footer />\r\n      </Flex>\r\n      {/* CHANGE THEME COLOR BUTTON */}\r\n      {/* <FixedPlugin /> */}\r\n    </Flex>\r\n  );\r\n}\r\n// PROPS\r\n\r\n\r\nexport default AuthIllustration;\r\n","import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\n// Chakra imports\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Flex,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  FormLabel,\r\n  Heading,\r\n  Icon,\r\n  Input,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Text,\r\n  useColorModeValue\r\n} from \"@chakra-ui/react\";\r\n\r\n// Custom components\r\nimport DefaultAuth from \"layouts/auth/Default\";\r\nimport Spinner from \"components/spinner/Spinner\";\r\n\r\n// Assets\r\nimport illustration from \"assets/img/auth/PNG-02.png\";\r\n\r\n// Icons\r\nimport { MdOutlineRemoveRedEye } from \"react-icons/md\";\r\nimport { RiEyeCloseLine } from \"react-icons/ri\";\r\n\r\n// Services and validation schema\r\nimport { postApi } from \"services/api\";\r\nimport { loginSchema } from \"schema\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction SignIn() {\r\n  const textColor = useColorModeValue(\"navy.700\", \"white\");\r\n  const textColorSecondary = \"gray.400\";\r\n  const brandStars = useColorModeValue(\"brand.500\", \"brand.400\");\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n  const [checkBox, setCheckBox] = React.useState(true);\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const togglePasswordVisibility = () => setShowPassword(!showPassword);\r\n\r\n  const initialValues = {\r\n    username: '',\r\n    password: ''\r\n  };\r\n\r\n  const { errors, values, touched, handleBlur, handleChange, resetForm, handleSubmit } = useFormik({\r\n    initialValues,\r\n    validationSchema: loginSchema,\r\n    onSubmit: async () => {\r\n      await login();\r\n    }\r\n  });\r\n\r\n  const login = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await postApi('/user/login', values, checkBox);\r\n      if (response?.status === 200) {\r\n        toast.success(\"Login Successfully!\");\r\n        navigate('/admin');\r\n        resetForm();\r\n      } else {\r\n        toast.error(response?.response?.data?.error || \"Login Failed\");\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast.error(\"An error occurred during login.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DefaultAuth illustrationBackground={illustration} image={illustration}>\r\n      <Flex\r\n        maxW={{ base: \"100%\", md: \"max-content\" }}\r\n        w='100%'\r\n        mx={{ base: \"auto\", lg: \"0px\" }}\r\n        me='auto'\r\n        h='fit-content'\r\n        alignItems='start'\r\n        justifyContent='center'\r\n        mb={{ base: \"30px\", md: \"60px\" }}\r\n        px={{ base: \"25px\", md: \"0px\" }}\r\n        mt={{ base: \"40px\", md: \"14vh\" }}\r\n        flexDirection='column'\r\n      >\r\n        <Box me='auto'>\r\n          <Heading color={textColor} fontSize='36px' mb='10px'>\r\n            Sign In\r\n          </Heading>\r\n          <Text mb='36px' ms='4px' color={textColorSecondary} fontWeight='400' fontSize='md'>\r\n            Enter your email and password to sign in!\r\n          </Text>\r\n        </Box>\r\n\r\n        <Flex\r\n          zIndex='2'\r\n          direction='column'\r\n          w={{ base: \"100%\", md: \"420px\" }}\r\n          maxW='100%'\r\n          background='transparent'\r\n          borderRadius='15px'\r\n          mx={{ base: \"auto\", lg: \"unset\" }}\r\n          me='auto'\r\n          mb={{ base: \"20px\", md: \"auto\" }}\r\n        >\r\n          <form onSubmit={handleSubmit}>\r\n            {/* Username Field */}\r\n            <FormControl isInvalid={errors.username && touched.username} mb=\"24px\">\r\n              <FormLabel ms='4px' fontSize='sm' fontWeight='500' color={textColor}>\r\n                Email<Text color={brandStars}>*</Text>\r\n              </FormLabel>\r\n              <Input\r\n                fontSize='sm'\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.username}\r\n                name=\"username\"\r\n                type='email'\r\n                placeholder='mail@simmmple.com'\r\n                size='lg'\r\n                borderColor={errors.username && touched.username ? \"red.300\" : null}\r\n              />\r\n              {errors.username && touched.username && (\r\n                <FormErrorMessage mb='24px'>{errors.username}</FormErrorMessage>\r\n              )}\r\n            </FormControl>\r\n\r\n            {/* Password Field */}\r\n            <FormControl isInvalid={errors.password && touched.password} mb=\"24px\">\r\n              <FormLabel ms='4px' fontSize='sm' fontWeight='500' color={textColor}>\r\n                Password<Text color={brandStars}>*</Text>\r\n              </FormLabel>\r\n              <InputGroup size='md'>\r\n                <Input\r\n                  fontSize='sm'\r\n                  placeholder='Enter Your Password'\r\n                  name='password'\r\n                  type={showPassword ? \"text\" : \"password\"}\r\n                  value={values.password}\r\n                  onChange={handleChange}\r\n                  onBlur={handleBlur}\r\n                  size='lg'\r\n                  borderColor={errors.password && touched.password ? \"red.300\" : null}\r\n                />\r\n                <InputRightElement mt='4px'>\r\n                  <Icon\r\n                    color={textColorSecondary}\r\n                    _hover={{ cursor: \"pointer\" }}\r\n                    as={showPassword ? RiEyeCloseLine : MdOutlineRemoveRedEye}\r\n                    onClick={togglePasswordVisibility}\r\n                  />\r\n                </InputRightElement>\r\n              </InputGroup>\r\n              {errors.password && touched.password && (\r\n                <FormErrorMessage mb='24px'>{errors.password}</FormErrorMessage>\r\n              )}\r\n            </FormControl>\r\n\r\n            {/* Keep me logged in */}\r\n            <Flex justifyContent='space-between' align='center' mb='24px'>\r\n              <FormControl display='flex' alignItems='center'>\r\n                <Checkbox\r\n                  isChecked={checkBox}\r\n                  onChange={(e) => setCheckBox(e.target.checked)}\r\n                  id='remember-login'\r\n                  colorScheme='brandScheme'\r\n                  me='10px'\r\n                />\r\n                <FormLabel htmlFor='remember-login' mb='0' fontWeight='normal' color={textColor} fontSize='sm'>\r\n                  Keep me logged in\r\n                </FormLabel>\r\n              </FormControl>\r\n            </Flex>\r\n\r\n            {/* Submit Button */}\r\n            <Button\r\n              fontSize='sm'\r\n              variant='brand'\r\n              fontWeight='500'\r\n              w='100%'\r\n              h='50'\r\n              type=\"submit\"\r\n              mb='24px'\r\n              isDisabled={isLoading}\r\n            >\r\n              {isLoading ? <Spinner /> : 'Sign In'}\r\n            </Button>\r\n          </form>\r\n        </Flex>\r\n      </Flex>\r\n    </DefaultAuth>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","'use client';\nimport { createContext } from '@chakra-ui/utils/context';\n\nconst [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n});\n\nexport { CheckboxGroupProvider, useCheckboxGroupContext };\n","'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { chakra } from '../system/factory.mjs';\n\nfunction CheckIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 12 10\",\n      style: {\n        fill: \"none\",\n        strokeWidth: 2,\n        stroke: \"currentColor\",\n        strokeDasharray: 16\n      },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"polyline\", { points: \"1.5 6 4.5 9 10.5 1\" })\n    }\n  );\n}\nfunction IndeterminateIcon(props) {\n  return /* @__PURE__ */ jsx(\n    chakra.svg,\n    {\n      width: \"1.2em\",\n      viewBox: \"0 0 24 24\",\n      style: { stroke: \"currentColor\", strokeWidth: 4 },\n      ...props,\n      children: /* @__PURE__ */ jsx(\"line\", { x1: \"21\", x2: \"3\", y1: \"12\", y2: \"12\" })\n    }\n  );\n}\nfunction CheckboxIcon(props) {\n  const { isIndeterminate, isChecked, ...rest } = props;\n  const BaseIcon = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return isChecked || isIndeterminate ? /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\"\n      },\n      children: /* @__PURE__ */ jsx(BaseIcon, { ...rest })\n    }\n  ) : null;\n}\n\nexport { CheckboxIcon };\n","'use client';\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { callAll, compact, cx } from '@chakra-ui/utils';\nimport { keyframes } from '@emotion/react';\nimport { useMemo, cloneElement } from 'react';\nimport { useCheckboxGroupContext } from './checkbox-context.mjs';\nimport { CheckboxIcon } from './checkbox-icon.mjs';\nimport { useCheckbox } from './use-checkbox.mjs';\nimport { useInitialAnimationState } from './use-initial-animation-state.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst controlStyles = {\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  verticalAlign: \"top\",\n  userSelect: \"none\",\n  flexShrink: 0\n};\nconst rootStyles = {\n  cursor: \"pointer\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  verticalAlign: \"top\",\n  position: \"relative\"\n};\nconst checkAnim = keyframes({\n  from: {\n    opacity: 0,\n    strokeDashoffset: 16,\n    transform: \"scale(0.95)\"\n  },\n  to: {\n    opacity: 1,\n    strokeDashoffset: 0,\n    transform: \"scale(1)\"\n  }\n});\nconst indeterminateOpacityAnim = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nconst indeterminateScaleAnim = keyframes({\n  from: {\n    transform: \"scaleX(0.65)\"\n  },\n  to: {\n    transform: \"scaleX(1)\"\n  }\n});\nconst Checkbox = forwardRef(\n  function Checkbox2(props, ref) {\n    const group = useCheckboxGroupContext();\n    const mergedProps = { ...group, ...props };\n    const styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n    const ownProps = omitThemingProps(props);\n    const {\n      spacing = \"0.5rem\",\n      className,\n      children,\n      iconColor,\n      iconSize,\n      icon = /* @__PURE__ */ jsx(CheckboxIcon, {}),\n      isChecked: isCheckedProp,\n      isDisabled = group?.isDisabled,\n      onChange: onChangeProp,\n      inputProps,\n      ...rest\n    } = ownProps;\n    let isChecked = isCheckedProp;\n    if (group?.value && ownProps.value) {\n      isChecked = group.value.includes(ownProps.value);\n    }\n    let onChange = onChangeProp;\n    if (group?.onChange && ownProps.value) {\n      onChange = callAll(group.onChange, onChangeProp);\n    }\n    const {\n      state,\n      getInputProps,\n      getCheckboxProps,\n      getLabelProps,\n      getRootProps\n    } = useCheckbox({\n      ...rest,\n      isDisabled,\n      isChecked,\n      onChange\n    });\n    const shouldAnimate = useInitialAnimationState(state.isChecked);\n    const iconStyles = useMemo(\n      () => ({\n        animation: !shouldAnimate ? void 0 : state.isIndeterminate ? `${indeterminateOpacityAnim} 20ms linear, ${indeterminateScaleAnim} 200ms linear` : `${checkAnim} 200ms linear`,\n        ...styles.icon,\n        ...compact({\n          fontSize: iconSize,\n          color: iconColor\n        })\n      }),\n      [iconColor, iconSize, shouldAnimate, state.isIndeterminate, styles.icon]\n    );\n    const clonedIcon = cloneElement(icon, {\n      __css: iconStyles,\n      isIndeterminate: state.isIndeterminate,\n      isChecked: state.isChecked\n    });\n    return /* @__PURE__ */ jsxs(\n      chakra.label,\n      {\n        __css: { ...rootStyles, ...styles.container },\n        className: cx(\"chakra-checkbox\", className),\n        ...getRootProps(),\n        children: [\n          /* @__PURE__ */ jsx(\n            \"input\",\n            {\n              className: \"chakra-checkbox__input\",\n              ...getInputProps(inputProps, ref)\n            }\n          ),\n          /* @__PURE__ */ jsx(\n            chakra.span,\n            {\n              __css: { ...controlStyles, ...styles.control },\n              className: \"chakra-checkbox__control\",\n              ...getCheckboxProps(),\n              children: clonedIcon\n            }\n          ),\n          children && /* @__PURE__ */ jsx(\n            chakra.span,\n            {\n              className: \"chakra-checkbox__label\",\n              ...getLabelProps(),\n              __css: {\n                marginStart: spacing,\n                ...styles.label\n              },\n              children\n            }\n          )\n        ]\n      }\n    );\n  }\n);\nCheckbox.displayName = \"Checkbox\";\n\nexport { Checkbox };\n","'use client';\nimport { useState } from 'react';\n\nfunction useInitialAnimationState(isChecked) {\n  const [previousIsChecked, setPreviousIsChecked] = useState(isChecked);\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  if (isChecked !== previousIsChecked) {\n    setShouldAnimate(true);\n    setPreviousIsChecked(isChecked);\n  }\n  return shouldAnimate;\n}\n\nexport { useInitialAnimationState };\n"],"names":["Spinner","_jsx","className","contactSchema","yup","firstName","min","required","lastName","title","email","phoneNumber","max","mobileNumber","notRequired","physicalAddress","mailingAddress","preferredContactMethod","leadSource","referralSource","campaignSource","leadStatus","leadRating","leadConversionProbability","emailHistory","phoneCallHistory","meetingHistory","notesandComments","tagsOrLabelsForcategorizingcontacts","birthday","anniversary","keyMilestones","dob","gender","occupation","interestsOrHobbies","communicationFrequency","preferences","linkedInProfile","facebookProfile","twitterHandle","otherProfiles","agentOrTeamMember","internalNotesOrComments","createBy","currentYear","Date","getFullYear","propertySchema","propertyType","propertyAddress","listingPrice","squareFootage","numberofBedrooms","numberofBathrooms","yearBuilt","propertyDescription","lotSize","parkingAvailability","appliancesIncluded","heatingAndCoolingSystems","flooringType","exteriorFeatures","communityAmenities","propertyPhotos","virtualToursOrVideos","floorPlans","propertyDocuments","listingStatus","listingAgentOrTeam","listingDate","marketingDescription","multipleListingService","previousOwners","purchaseHistory","propertyTaxes","homeownersAssociation","mortgageInformation","sellers","buyers","propertyManagers","contractorsOrServiceProviders","leadSchema","leadName","leadEmail","leadPhoneNumber","leadAddress","leadSourceDetails","leadCampaign","leadSourceChannel","leadSourceMedium","leadSourceCampaign","leadSourceReferral","leadAssignedAgent","leadOwner","leadCommunicationPreferences","leadCreationDate","leadConversionDate","leadFollowUpDate","leadFollowUpStatus","leadScore","leadNurturingWorkflow","leadEngagementLevel","leadConversionRate","leadNurturingStage","leadNextAction","userSchema","matches","username","loginSchema","password","emailSchema","sender","recipient","cc","bcc","relatedToContact","relatedToLead","subject","message","createByLead","test","value","this","createError","path","documentSchema","shape","folderName","filename","phoneCallSchema","callDuration","callNotes","category","textMsgSchema","to","createFor","TaskSchema","description","notes","reminder","start","end","backgroundColor","borderColor","textColor","display","url","MeetingSchema","agenda","attendes","of","trim","attendesLead","location","related","dateTime","createdBy","FormErrorStylesProvider","useFormErrorStyles","createContext","name","errorMessage","FormErrorMessage","forwardRef","props","ref","styles","useMultiStyleConfig","ownProps","omitThemingProps","field","useFormControlContext","isInvalid","jsx","children","chakra","div","getErrorMessageProps","cx","__css","alignItems","text","displayName","_className","Icon","icon","fill","d","Footer","useColorModeValue","base","lg","Flex","zIndex","flexDirection","xl","justifyContent","px","md","pb","illustrationBackground","h","_jsxs","sm","w","maxW","mx","pt","ps","direction","Box","minH","borderBottomLeftRadius","position","overflow","right","textColorSecondary","brandStars","isLoading","setIsLoading","React","checkBox","setCheckBox","showPassword","setShowPassword","navigate","useNavigate","errors","values","touched","handleBlur","handleChange","resetForm","handleSubmit","useFormik","initialValues","validationSchema","onSubmit","async","login","response","postApi","_response$response","_response$response$da","status","toast","success","error","data","console","DefaultAuth","illustration","image","me","mb","mt","Heading","color","fontSize","Text","ms","fontWeight","background","borderRadius","FormControl","FormLabel","Input","onChange","onBlur","type","placeholder","size","InputGroup","InputRightElement","_hover","cursor","as","RiEyeCloseLine","MdOutlineRemoveRedEye","onClick","togglePasswordVisibility","align","Checkbox","isChecked","e","target","checked","id","colorScheme","htmlFor","Button","variant","isDisabled","CheckboxGroupProvider","useCheckboxGroupContext","strict","CheckIcon","svg","width","viewBox","style","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","x1","x2","y1","y2","CheckboxIcon","isIndeterminate","rest","BaseIcon","height","controlStyles","verticalAlign","userSelect","flexShrink","rootStyles","checkAnim","keyframes","from","opacity","strokeDashoffset","transform","indeterminateOpacityAnim","indeterminateScaleAnim","group","mergedProps","spacing","iconColor","iconSize","isCheckedProp","onChangeProp","inputProps","includes","callAll","state","getInputProps","getCheckboxProps","getLabelProps","getRootProps","useCheckbox","shouldAnimate","previousIsChecked","setPreviousIsChecked","useState","setShouldAnimate","useInitialAnimationState","iconStyles","useMemo","animation","compact","clonedIcon","cloneElement","jsxs","label","container","span","control","marginStart"],"sourceRoot":""}